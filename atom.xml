<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Halcyon Days</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://lhalcyon.com/"/>
  <updated>2021-03-25T15:23:14.338Z</updated>
  <id>https://lhalcyon.com/</id>
  
  <author>
    <name>L.</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Docker部署Python项目</title>
    <link href="https://lhalcyon.com/docker-deploy-python/"/>
    <id>https://lhalcyon.com/docker-deploy-python/</id>
    <published>2021-05-10T08:02:11.000Z</published>
    <updated>2021-03-25T15:23:14.338Z</updated>
    
    <content type="html"><![CDATA[<div class="note info"><p>使用 Docker 部署 Python 项目</p></div><h4 id="前提准备"><a href="#前提准备" class="headerlink" title="前提准备"></a>前提准备</h4><p>首先生成项目依赖文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip freeze &gt; requirements.txt</span><br></pre></td></tr></table></figure><p>此时会在项目目录下生成 <code>requirements.txt</code> 文件</p><p>创建 <code>Dockerfile</code> 文件</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 基于镜像基础</span></span><br><span class="line"><span class="keyword">FROM</span> python:<span class="number">3.7</span></span><br><span class="line"><span class="comment"># 设置代码文件夹工作目录 /app</span></span><br><span class="line"><span class="keyword">WORKDIR</span><span class="bash"> /app</span></span><br><span class="line"><span class="bash"><span class="comment"># 复制当前代码文件到容器中 /app</span></span></span><br><span class="line"><span class="bash">ADD . /app</span></span><br><span class="line"><span class="bash"><span class="comment"># 安装所需的包</span></span></span><br><span class="line"><span class="bash">RUN pip install -i http://mirrors.aliyun.com/pypi/simple/ --trusted-host mirrors.aliyun.com -r requirements.txt</span></span><br><span class="line"><span class="bash"><span class="comment"># Run app.py when the container launches</span></span></span><br><span class="line"><span class="bash">CMD [<span class="string">"python"</span>, <span class="string">"main.py"</span>]</span></span><br></pre></td></tr></table></figure><p>比如我们的项目入口文件是 <code>main.py</code>  命令行对应配置即可</p><p>个人习惯使用 docker-compose 启动 , 创建 <code>docker-compose.yml</code> 文件</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">'3'</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line"><span class="attr">    pes-spider:</span></span><br><span class="line"><span class="attr">       build:</span> <span class="string">.</span></span><br><span class="line"><span class="attr">       restart:</span> <span class="string">always</span></span><br><span class="line"><span class="attr">       volumes:</span></span><br><span class="line"><span class="bullet">            -</span> <span class="string">/etc/localtime:/etc/localtime:ro</span></span><br></pre></td></tr></table></figure><p>以上具体配置可参考往期文章 <a href="https://lhalcyon.com/dockerfile/">Dockerfile详解</a></p><h4 id="上传文件"><a href="#上传文件" class="headerlink" title="上传文件"></a>上传文件</h4><p>将项目 <code>py</code> 文件 、以上2个 docker 文件 ,依赖文件 <code>requirements.txt</code> 上传到服务器同一目录</p><h4 id="构建-amp-运行"><a href="#构建-amp-运行" class="headerlink" title="构建&amp;运行"></a>构建&amp;运行</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 首次构建</span><br><span class="line">docker-compose up -d</span><br><span class="line"># 若更新了py文件需要重新构建镜像及容器</span><br><span class="line">docker-compose up -d --build</span><br></pre></td></tr></table></figure><h4 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h4><ul><li><a href="https://blog.csdn.net/eternal_blue/article/details/104779531" target="_blank" rel="noopener">Docker下部署python项目</a></li><li><a href="https://www.cnblogs.com/baiboy/p/docker1.html" target="_blank" rel="noopener">Docker如何部署Python项目</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;div class=&quot;note info&quot;&gt;&lt;p&gt;使用 Docker 部署 Python 项目&lt;/p&gt;&lt;/div&gt;
&lt;h4 id=&quot;前提准备&quot;&gt;&lt;a href=&quot;#前提准备&quot; class=&quot;headerlink&quot; title=&quot;前提准备&quot;&gt;&lt;/a&gt;前提准备&lt;/h4&gt;&lt;p&gt;首先生
      
    
    </summary>
    
      <category term="Python" scheme="https://lhalcyon.com/categories/Python/"/>
    
    
      <category term="Docker" scheme="https://lhalcyon.com/tags/Docker/"/>
    
      <category term="Python" scheme="https://lhalcyon.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Python项目自动生成requirements.txt文件</title>
    <link href="https://lhalcyon.com/python-requirements/"/>
    <id>https://lhalcyon.com/python-requirements/</id>
    <published>2021-04-11T08:02:11.000Z</published>
    <updated>2021-03-25T15:23:14.337Z</updated>
    
    <content type="html"><![CDATA[<div class="note info"><p>通过设置 requirements.txt 来快速安装依赖库.</p></div><h4 id="生成文件"><a href="#生成文件" class="headerlink" title="生成文件"></a>生成文件</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip freeze &gt; requirements.txt</span><br></pre></td></tr></table></figure><p>此时会在项目目录下生成 <code>requirements.txt</code> 文件</p><h4 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h4><p>文件格式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">requests==1.2.0 </span><br><span class="line">Flask==0.10.1</span><br></pre></td></tr></table></figure><p>通过命令安装依赖</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install -r requirements.txt</span><br></pre></td></tr></table></figure><h4 id="使用镜像"><a href="#使用镜像" class="headerlink" title="使用镜像"></a>使用镜像</h4><p>往往很多库下载起来会很慢 , 我们需要使用国内镜像仓库.</p><p>常用镜像</p><ul><li>清华：<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fpypi.tuna.tsinghua.edu.cn%2Fsimple" target="_blank" rel="noopener">https://pypi.tuna.tsinghua.edu.cn/simple</a></li><li>阿里云：<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fmirrors.aliyun.com%2Fpypi%2Fsimple%2F" target="_blank" rel="noopener">http://mirrors.aliyun.com/pypi/simple/</a></li><li>中国科技大学 <a href="https://links.jianshu.com/go?to=https%3A%2F%2Fpypi.mirrors.ustc.edu.cn%2Fsimple%2F" target="_blank" rel="noopener">https://pypi.mirrors.ustc.edu.cn/simple/</a></li><li>华中理工大学：<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fpypi.hustunique.com%2F" target="_blank" rel="noopener">http://pypi.hustunique.com/</a></li><li>山东理工大学：<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fpypi.sdutlinux.org%2F" target="_blank" rel="noopener">http://pypi.sdutlinux.org/</a></li><li>豆瓣：<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fpypi.douban.com%2Fsimple%2F" target="_blank" rel="noopener">http://pypi.douban.com/simple/</a></li></ul><p>指定镜像仓库安装 <code>requirements.txt</code> 依赖</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install -i http://mirrors.aliyun.com/pypi/simple/ --trusted-host mirrors.aliyun.com -r requirements.txt</span><br></pre></td></tr></table></figure><h4 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h4><ul><li><a href="https://blog.csdn.net/Irving_zhang/article/details/79087569" target="_blank" rel="noopener">python 项目自动生成requirements.txt文件</a></li><li><a href="https://www.jianshu.com/p/2b02e40b8f7f" target="_blank" rel="noopener">Python用国内镜像下载REQUIREMENTS.TXT中的所有包</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;div class=&quot;note info&quot;&gt;&lt;p&gt;通过设置 requirements.txt 来快速安装依赖库.&lt;/p&gt;&lt;/div&gt;
&lt;h4 id=&quot;生成文件&quot;&gt;&lt;a href=&quot;#生成文件&quot; class=&quot;headerlink&quot; title=&quot;生成文件&quot;&gt;&lt;/a&gt;生成文件&lt;/
      
    
    </summary>
    
      <category term="Python" scheme="https://lhalcyon.com/categories/Python/"/>
    
    
      <category term="Python" scheme="https://lhalcyon.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>转-Python问题浅谈</title>
    <link href="https://lhalcyon.com/python-import/"/>
    <id>https://lhalcyon.com/python-import/</id>
    <published>2021-03-05T08:02:11.000Z</published>
    <updated>2021-03-22T12:21:06.158Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本文转自 <a href="https://zhuanlan.zhihu.com/p/69099185" target="_blank" rel="noopener">知乎</a></p></blockquote><ul><li><strong>模块导入原理</strong></li><li><strong>ModuleNotFoundError</strong></li><li><strong>绝对路径</strong></li><li><strong>导入相对</strong></li><li><strong>路径导入</strong></li><li><strong>添加路径到sys.path</strong></li><li><strong>参考</strong></li></ul><p>最近遇到一个python import的问题，经过是这样的：</p><p>我先实现好一个功能模块，这个功能模块有多级目录和很多 <code>.py</code> 文件，然后把该功能模块放到其他目录下作为子模块，运行代码时，就报错<code>ModuleNotFoundError</code>。</p><p>为了解决这个问题，就把 python 的 import 部分给研究了一下（本文不介绍import的语法）。</p><h4 id="模块导入原理"><a href="#模块导入原理" class="headerlink" title="模块导入原理"></a>模块导入原理</h4><p>一个module(模块)就是一个<code>.py</code>文件，一个package(包)就是一个包含<code>.py</code>文件的文件夹（对于python2，该文件夹下还需要<code>__init__.py</code>）。</p><p>我这里只考虑python3的情况。</p><p>在python脚本被执行，python导入其他包或模块时，python会根据<code>sys.path</code>列表里的路径寻找这些包或模块。如果没找到的话，程序就会报错<code>ModuleNotFoundError</code>。</p><p>既然要根据<code>sys.path</code>列表里的路径找到这些需要导入包或模块，就需要知道这个列表里都是些什么东西。</p><p>先看下如下程序：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ /usr/bin/python3.5</span><br><span class="line">&gt;&gt;&gt; import sys</span><br><span class="line">&gt;&gt;&gt; print(sys.path)</span><br><span class="line">[&apos;&apos;, &apos;/usr/lib/python35.zip&apos;, &apos;/usr/lib/python3.5&apos;, &apos;/usr/lib/python3.5/plat-x86_64-linux-gnu&apos;, &apos;/usr/lib/python3.5/lib-dynload&apos;, &apos;/home/username/.local/lib/python3.5/site-packages&apos;, &apos;/usr/local/lib/python3.5/dist-packages&apos;, &apos;/usr/lib/python3/dist-packages&apos;]</span><br></pre></td></tr></table></figure><p><code>sys.path</code>列表中的每个元素为一个搜索模块的路径，程序中要导入包或模块就需要在这些路径中进行查找，主要分为三种情况：</p><ol><li>当前执行脚本（主动执行，而不是被其他模块调用）所在路径。上面例子是在交互界面进行操作，没有执行脚本，所以为空字符串。</li><li>python内置的<a href="https://link.zhihu.com/?target=https%3A//docs.python.org/3/library/" target="_blank" rel="noopener">标准库</a>路径，<a href="https://link.zhihu.com/?target=https%3A//docs.python.org/3/using/cmdline.html%23envvar-PYTHONPATH" target="_blank" rel="noopener">PYTHONPATH</a>。</li><li>安装的第三方模块路径。</li></ol><p>在运行程序时，先在第一个路径下查找所需模块，没找到就到第二个路径下找，以此类推，按顺序在所有路径都查找后依然没找到所需模块，则抛出错误。列表的第一项是调用python解释器的脚本所在的目录，所以默认先在脚本所在路径下寻找模块。</p><p>所以从这里可以知道的是，如果我们在脚本所在路径下定义和python标准库同名的模块，那么程序就会调用我们自定义的该模块而不是标准库中的模块。</p><h4 id="ModuleNotFoundError"><a href="#ModuleNotFoundError" class="headerlink" title="ModuleNotFoundError"></a>ModuleNotFoundError</h4><p>知道了调用模块的流程，现在来分析一下文章最开始提到的那个错误。</p><p>假设功能模块的目录树为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">package_0</span><br><span class="line">├── module_0.py</span><br><span class="line">├── module_1.py</span><br><span class="line">├── package_1</span><br><span class="line">│   ├── __init__.py</span><br><span class="line">│   ├── module_2.py</span><br><span class="line">│   ├── module_3.py</span><br><span class="line">│   └── package_2</span><br><span class="line">│       ├── __init__.py</span><br><span class="line">│       ├── module_21.py</span><br><span class="line">│       └── module_22.py</span><br><span class="line">└── package_3</span><br><span class="line">    ├── __init__.py</span><br><span class="line">    └── module_4.py</span><br></pre></td></tr></table></figure><blockquote><p>要构建一个package，则对应文件夹下需要包含<code>__init.py</code>文件（python2版本）。</p></blockquote><p>执行命令为 <code>python module_0.py</code>，即通过 <code>module_0.py</code> 来调用python解释器，则该脚本文件所在的路径（’/home/…/package_0’）会被添加到 <code>sys.path</code> 中，可以通过该路径找到其他模块的，比如下面这些语句：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># module_0.py</span></span><br><span class="line"><span class="keyword">import</span> module_1</span><br><span class="line"><span class="keyword">from</span> package_1 <span class="keyword">import</span> module_2</span><br><span class="line"><span class="keyword">from</span> package_1.package_2 <span class="keyword">import</span> module_21</span><br></pre></td></tr></table></figure><p>而在 <code>module_2.py</code> 中加入下面这句：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># module_2.py</span></span><br><span class="line"><span class="keyword">import</span> module_3</span><br></pre></td></tr></table></figure><p>分为下面两种情况：</p><ol><li>执行 <code>python module_2.py</code> 时，不会出现错误。</li><li>执行 <code>python module_0.py</code> 时，出现错误：<code>ModuleNotFoundError: No module named &#39;module_3&#39;</code>。</li></ol><p>第一种情况把路径（’/home/…/package_0/package_1’）添加到 <code>sys.path</code> 中，可以通过<code>package_1</code> 找到 <code>module_3</code>。</p><p>第二种情况把路径（’/home/…/package_0’）添加到 <code>sys.path</code> 中，该路径下就不能在 <code>module_2.py</code> 中通过这种方式找到<code>module_3</code>，因为<code>module_2.py</code> 在路径<code>/home/.../package_0/package_1</code>下。</p><h4 id="绝对路径导入"><a href="#绝对路径导入" class="headerlink" title="绝对路径导入"></a>绝对路径导入</h4><p>在上面第二种情况中想调用<code>module_3</code>的话，可以使用<strong>绝对路径导入</strong>的方式：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># module_2.py</span></span><br><span class="line"><span class="keyword">from</span> package_1 <span class="keyword">import</span> module_3</span><br></pre></td></tr></table></figure><p>即在路径<code>/home/.../package_0/package_1</code>下先找到<code>package_1</code>，再找到<code>module_3</code>。</p><p>同理，想在<code>module_21.py</code>中调用<code>module_22</code>，可以使用如下方式：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># module_21.py</span></span><br><span class="line"><span class="keyword">from</span> package_1.package_2 <span class="keyword">import</span> module_21</span><br></pre></td></tr></table></figure><p>绝对导入根据从项目根文件夹开始的完整路径导入各个模块。</p><p>使用绝对路径的方式就可以解决这个问题，但是如果<code>package_0</code>这个文件夹要放到其他项目中，则这个文件夹下的所有相关导入都要修改，即在绝对导入的基础上再加一层。</p><p>而且如果文件夹层级太多，调用一个模块就需要写很长一串，显得很冗余。想要简单一些的话，可以考虑相对路径导入。</p><h4 id="相对路径导入"><a href="#相对路径导入" class="headerlink" title="相对路径导入"></a>相对路径导入</h4><p>相对导入的形式取决于当前位置以及要导入的模块、包或对象的位置。相对导入看起来就比绝对导入简洁一些。</p><p>相对导入使用点符号来指定位置。</p><ul><li>单点表示引用的模块或包与当前模块在同一目录中（同一个包中）。</li><li>两点表示在当前模块所在位置的父目录中。</li></ul><p>还是执行命令为 <code>python module_0.py</code>，想在 <code>module_2.py</code> 中导入其他模块，可以使用如下方法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># module_2.py</span></span><br><span class="line"><span class="keyword">from</span> . <span class="keyword">import</span> module_3</span><br><span class="line"><span class="keyword">from</span> .package_2 <span class="keyword">import</span> module_21</span><br></pre></td></tr></table></figure><p>第一行表示调用和<code>module_2</code> 在同一路径的<code>module_3</code> 模块。</p><p>第二行表示调用和<code>module_2</code> 在同一路径的<code>package_2</code> 包下的<code>module_21</code> 模块。</p><p>还有两种用法：</p><p><code>from .. import module_name</code>：导入本模块上一级目录的模块。</p><p><code>from ..package_name import module_name</code>。导入本模块上一级目录下的包中的模块。</p><p>不过相对导入要注意两个地方（仍然执行命令为 <code>python module_0.py</code>）：</p><p><strong>第一个：</strong></p><ul><li>在 module_21 中导入 module_2：<code>from .. import module_2</code></li><li>在 module_2 中导入 module_4：<code>from ..package_3 import module_4</code></li></ul><p>理论上这两句都没错，但是第二句会报如下错误：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ValueError: attempted relative import beyond top-level package</span><br></pre></td></tr></table></figure><p>这个报错的意思是：试图在顶级包（top-level package）之外进行相对导入。也就是说相对导入只适用于顶级包之内的模块。</p><p>如果将 <code>module_0.py</code> 当作执行模块，则和该模块同级的 <code>package_1</code> 和 <code>package_3</code> 就是顶级包（top-level package），而 module_2 在<code>package_1</code>中，module_0、module_1和module_4都在 <code>package_1</code>之外，所以调用这三个模块时，就会报这个错误。</p><p><strong>第二个：</strong></p><p>还有个注意点就是使用了相对导入的模块文件不能作为顶层执行文件，即不能通过 <code>python</code> 命令执行，比如执行<code>python module_0.py</code>，在 <code>module_0</code> 中添加如下语句：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># module_0.py</span></span><br><span class="line"><span class="keyword">from</span> .package_1 <span class="keyword">import</span> module_2</span><br></pre></td></tr></table></figure><p>报错如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ModuleNotFoundError: No module named &apos;__main__.package_1&apos;; &apos;__main__&apos; is not a package</span><br></pre></td></tr></table></figure><p>python 的相对导入会通过模块的 <code>__name__</code> 属性来判断该模块的位置，当模块作为顶层文件被执行时，其 <code>__name__</code> 这个值为 <code>__main__</code>，不包含任何包的名字，而当这个模块被别的模块调用时，其 <code>__name__</code> 的值为这个模块和其所在包的名字，比如 <code>module_2</code> 的 <code>__name__</code> 值为 <code>package_1.module_2</code>。</p><p>。。。其实这个内部原理我也没弄清楚，可以查看这个<a href="https://link.zhihu.com/?target=https%3A//stackoverflow.com/questions/45446418/modulenotfounderror-no-module-named-main-xxxx-main-is-not-a-packag" target="_blank" rel="noopener">stackoverflow 问题</a>，最后结论就是使用了相对导入的模块文件不能被直接运行，只能通过其他模块调用。</p><p>使用相对导入没有绝对导入那么直观，而且如果目录结构发生改变，则也要修改对应模块的导入语句。所以我最后使用的是下面这种方法。</p><h4 id="添加路径到sys-path"><a href="#添加路径到sys-path" class="headerlink" title="添加路径到sys.path"></a>添加路径到sys.path</h4><p>前面说过程序只会在<code>sys.path</code> 列表的路径中搜索模块，那么就可以想到另一个解决方法，即将想调用包或模块的路径添加到<code>sys.path</code> 中。</p><p>还是执行 <code>python module_0.py</code>，已经知道在 <code>module_2.py</code> 中直接导入<code>module_3</code> 模块会报错，除了使用绝对导入和相对导入，还可以将<code>module_2.py</code> 所在目录添加到<code>sys.path</code> 中。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># module_2.py</span></span><br><span class="line">sys.path.append(os.path.dirname(__file__))</span><br><span class="line"><span class="keyword">import</span> module_3</span><br><span class="line"><span class="keyword">from</span> package_2 <span class="keyword">import</span> module_21</span><br></pre></td></tr></table></figure><p><code>sys.path.append(os.path.dirname(__file__))</code> 表示的含义如下：</p><ul><li>使用 <code>sys.path.append</code> 将某路径添加到<code>sys.path</code> 中。</li><li><code>__file__</code> 获得该模块文件的绝对路径</li><li><code>os.path.dirname(__file__)</code> 获得模块文件所在的目录</li></ul><p>所以这条语句就是把模块文件所在的目录添加到<code>sys.path</code> 中。</p><p>通过这种方法可以比较灵活地把其他路径添加到<code>sys.path</code> 中，而没有什么限制。</p><p>比如导入<code>module_4.py</code> 所在路径：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># module_2.py</span></span><br><span class="line">sys.path.append(os.path.join(os.path.dirname(__file__), <span class="string">'../package_3'</span>))</span><br><span class="line"><span class="keyword">import</span> module_4</span><br></pre></td></tr></table></figure><p>其中的 <code>os.path.join(os.path.dirname(__file__), &#39;../package_3&#39;)</code> 的值为：<code>/home/zxd/Documents/package_0/package_1/../package_3</code>，两点表示上一级目录。然后我们就可以直接导入<code>module_4</code> 了。</p><p>当通过这种方法导入工程文件中的很多模块路径在<code>sys.path</code> 中时，如果工程文件中存在重名模块，可能会报错：<a href="https://link.zhihu.com/?target=https%3A//stackoverflow.com/questions/35580749/importerror-cannot-import-name" target="_blank" rel="noopener">ImportError: cannot import name</a>。这个要小心一点。</p><h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><p><a href="https://link.zhihu.com/?target=https%3A//realpython.com/absolute-vs-relative-python-imports/" target="_blank" rel="noopener">Absolute vs Relative Imports in Python</a></p><p><a href="https://link.zhihu.com/?target=https%3A//realpython.com/python-modules-packages/" target="_blank" rel="noopener">Python Modules and Packages – An Introduction</a></p><p><a href="https://link.zhihu.com/?target=https%3A//www.datacamp.com/community/tutorials/modules-in-python" target="_blank" rel="noopener">Working with Modules in Python</a></p><p><a href="https://link.zhihu.com/?target=https%3A//chrisyeh96.github.io/2017/08/08/definitive-guide-python-imports.html" target="_blank" rel="noopener">The Definitive Guide to Python import Statements</a></p><p><a href="https://zhuanlan.zhihu.com/p/69099185/[https://medium.com/pyladies-taiwan/python-的-import-陷阱-3538e74f57e3](https://medium.com/pyladies-taiwan/python-的-import-陷阱-3538e74f57e3" target="_blank" rel="noopener">z.defying：import 问题浅谈</a>)</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;本文转自 &lt;a href=&quot;https://zhuanlan.zhihu.com/p/69099185&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;知乎&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;stron
      
    
    </summary>
    
      <category term="Python" scheme="https://lhalcyon.com/categories/Python/"/>
    
    
      <category term="Python" scheme="https://lhalcyon.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>PyQT5环境搭建及应用打包</title>
    <link href="https://lhalcyon.com/hello-pyqt5/"/>
    <id>https://lhalcyon.com/hello-pyqt5/</id>
    <published>2021-02-03T08:02:11.000Z</published>
    <updated>2021-03-25T15:23:14.337Z</updated>
    
    <content type="html"><![CDATA[<h4 id="通用开发框架"><a href="#通用开发框架" class="headerlink" title="通用开发框架"></a>通用开发框架</h4><ul><li>electorn：基于node-js，跨平台，开发成本低，运行效率低</li><li>qt：基于C++，跨平台，效率高，开发成本高</li><li>javafx：基于java，主要用于跨平台桌面程序开发</li><li>flutter：基于dart语言，谷歌开源移动UI框架，可以快速在iOS和Android上构建高质量的原生用户界面</li></ul><h5 id="Python方案"><a href="#Python方案" class="headerlink" title="Python方案"></a>Python方案</h5><ul><li>PyQt：PyQt5是Qt v5的Python版本，功能强大复杂，提供QT Designer设计UI （GPL V3协议，开源，商用收费）</li><li>Pyside: PySide2是来自QT for Python项目的官方Python模块 （LGPL协议，闭源商用）</li><li>Tkinter：Python标准库，Tk GUI 工具包的接口 ，布局通过代码实现，简单易用，但开发效率低</li><li>WxPython：开源免费，提供wxFormbuilder，压缩版PyQT</li></ul><p>因为现有脚本绝大多数是基于Python开发，同时调研了上述框架的官方支持力度及网络资料丰富程度，最终还是选用了最流行最强大的<a href="https://www.riverbankcomputing.com/software/pyqt/intro" target="_blank" rel="noopener">PyQt</a> 。</p><p>本文主要详细介绍下PyQt5完整入门教程，包含环境配置，使用Qt Disinger设计UI，最终完成一个天气预报的GUI实例开发。</p><p>环境为：Windows 10 + Python 3.8 + PyCharm 2019.2</p><h4 id="PyQt环境配置"><a href="#PyQt环境配置" class="headerlink" title="PyQt环境配置"></a>PyQt环境配置</h4><h5 id="安装PyQt"><a href="#安装PyQt" class="headerlink" title="安装PyQt"></a>安装PyQt</h5><p>PyQt当前最新版为<a href="https://pypi.org/project/PyQt5/" target="_blank" rel="noopener">PyQt5 5.14.1</a></p><p>直接pip安装即可：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pip install PyQt5</span><br><span class="line">pip install pyqt5-tools</span><br></pre></td></tr></table></figure><p>建议使用国内源，进行快速安装：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pip install -i https://pypi.tuna.tsinghua.edu.cn/simple pyqt5</span><br><span class="line">pip install -i https://pypi.tuna.tsinghua.edu.cn/simple pyqt5-tools</span><br></pre></td></tr></table></figure><h5 id="PyCharm配置环境"><a href="#PyCharm配置环境" class="headerlink" title="PyCharm配置环境"></a>PyCharm配置环境</h5><p>启动PyCharm后，新建一个PyQt5空项目后，需要配置Qt Designer、pyuic、pyrcc工具，相关配置方法如下：</p><h6 id="Qt-Designer"><a href="#Qt-Designer" class="headerlink" title="Qt Designer"></a>Qt Designer</h6><p>Qt Designer 是通过拖拽的方式放置控件，并实时查看控件效果进行快速UI设计。最终生成.ui文件（实质上是XML格式的文件），可以通过pyuic5工具转换成.py文件。</p><p>在Pycharm中，依次打开 File - Settings - Tools - External Tools，点击 + Create Tool，配置如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Name: QtDisigner</span><br><span class="line">Program : C:\Python38\Lib\site-packages\pyqt5_tools\Qt\bin\designer.exe # 当前designer目录，请根据实际修改</span><br><span class="line">Working directory: $FileDir$</span><br></pre></td></tr></table></figure><p><img src="https://lhalcyon-1258836598.cos.ap-shenzhen-fsi.myqcloud.com/blog/PyQt_1.jpg" alt=""></p><h6 id="Qt-Designer-汉化"><a href="#Qt-Designer-汉化" class="headerlink" title="Qt Designer 汉化"></a>Qt Designer 汉化</h6><p>默认Qt Designer是英文版的，可以使用翻译文件进行汉化，下载地址：<a href="https://pan.baidu.com/s/1tJ3P2UQEv7OF5ArfKCOsjA" target="_blank" rel="noopener">百度网盘</a>，提取码：kxvx</p><p>下载文件 designer_zh_CN.qm后， 拷贝至本地pyqt5_tools的translations文件夹下即可，示例目录：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Python38\Lib\site-packages\pyqt5_tools\Qt\bin\translations</span><br></pre></td></tr></table></figure><p>在PyCharm主界面，依次点击 Tools - External Tools - QtDisigner，即可启动中文界面的Qt Disigner</p><h6 id="PyUIC-配置"><a href="#PyUIC-配置" class="headerlink" title="PyUIC 配置"></a>PyUIC 配置</h6><p>PyUIC主要是把Qt Designer生成的.ui文件换成.py文件。</p><p>在Pycharm中，依次打开 File - Settings - Tools - External Tools，点击 + Create Tool，配置如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Name: PyUIC</span><br><span class="line">Program : C:\Python38\python.exe # 当前Python目录，请根据实际修改</span><br><span class="line">Arguments: -m PyQt5.uic.pyuic $FileName$ -o $FileNameWithoutExtension$.py</span><br><span class="line">Working directory: $FileDir$</span><br></pre></td></tr></table></figure><p><img src="https://lhalcyon-1258836598.cos.ap-shenzhen-fsi.myqcloud.com/blog/PyQt_2.jpg" alt=""></p><h6 id="PyRCC-配置"><a href="#PyRCC-配置" class="headerlink" title="PyRCC 配置"></a>PyRCC 配置</h6><p>PyRCC主要是把编写的.qrc资源文件换成.py文件。</p><p>在Pycharm中，依次打开 File - Settings - Tools - External Tools，点击 + Create Tool，配置如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Name: PyRCC</span><br><span class="line">Program : C:\Python38\Scripts\pyrcc5.exe # 当前rcc工具目录，请根据实际修改</span><br><span class="line">Arguments: $FileName$ -o $FileNameWithoutExtension$_rc.py</span><br><span class="line">Working directory: $FileDir$</span><br></pre></td></tr></table></figure><p><img src="https://lhalcyon-1258836598.cos.ap-shenzhen-fsi.myqcloud.com/blog/PyQt_3.jpg" alt=""></p><h4 id="应用打包"><a href="#应用打包" class="headerlink" title="应用打包"></a>应用打包</h4><p>若需要打包成客户端 , 先安装插件 pyinstaller </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install PyInstaller</span><br></pre></td></tr></table></figure><p>进入需要打包的目录下 , 执行命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Pyinstaller [opts] yourprogram.py</span><br></pre></td></tr></table></figure><p>示例</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pyinstaller -F -W main.py</span><br></pre></td></tr></table></figure><p>opts可选参数</p><table><thead><tr><th>参数</th><th>含义</th></tr></thead><tbody><tr><td>-F</td><td>指定打包后只生成一个exe格式的文件</td></tr><tr><td>-D</td><td>-onedir 创建一个目录 , 包含exe文件, 但会依赖很多文件(默认选项)</td></tr><tr><td>-c</td><td>-console , -nowindowed , 使用控制台 , 无窗口(默认)</td></tr><tr><td>-w</td><td>-windowed, -noconsole 使用窗口 , 无控制台</td></tr><tr><td>-p</td><td>添加搜索路径 , 让其找到对应的库</td></tr><tr><td>-i</td><td>改变生成应用的icon图标</td></tr></tbody></table><h5 id="Pyinstaller在PyCharm的支持配置"><a href="#Pyinstaller在PyCharm的支持配置" class="headerlink" title="Pyinstaller在PyCharm的支持配置"></a>Pyinstaller在PyCharm的支持配置</h5><p>点击 <code>Settings-&gt;Tools-&gt;External Tools</code> , 新增 Tool</p><p><img src="https://lhalcyon-1258836598.cos.ap-shenzhen-fsi.myqcloud.com/blog/4.png" alt=""></p><p><strong>Name</strong> : 自定义工具名称</p><p><strong>Program</strong> : pyinstaller.exe 文件所在的路径 , 通常在项目目录下的 Scripts 文件夹内</p><p><strong>Arguments</strong> :  <code>-F $FileNameWithoutExtension$.py -w -i logo.ico</code>  参数命令见上文</p><p><strong>Working directory</strong> : <code>$FileDir$</code></p><p>保存配置 , 然后选择要执行的文件 , 例如  <code>main.py</code>  <code>右键点击-&gt;External Tools-&gt; Pyinstaller Exe</code> 然后开始打包 , 完成后项目目录下会出现 <code>dist</code> 文件夹 , 可执行包就在其中</p><h4 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h4><ol><li><a href="https://www.riverbankcomputing.com/static/Docs/PyQt5/" target="_blank" rel="noopener">https://www.riverbankcomputing.com/static/Docs/PyQt5/</a></li><li><a href="http://code.py40.com/face" target="_blank" rel="noopener">http://code.py40.com/face</a></li><li>《PyQt5快速开发与实战 PDF》 <a href="https://pan.baidu.com/s/1J-Tee30SVxbNwvxMTxo1SA" target="_blank" rel="noopener">网盘地址</a> 提取码：k3xx</li><li><a href="https://blog.csdn.net/u011146423/article/details/85053053" target="_blank" rel="noopener">CSDN:Python GUI pycharm+Pyqt5 配置以及打包exe</a></li><li><a href="https://www.jb51.net/article/181438.htm" target="_blank" rel="noopener">Python打包工具PyInstaller的安装与pycharm配置支持PyInstaller详细方法</a></li><li><a href="https://lovesoo.org/2020/03/14/pyqt-getting-started/" target="_blank" rel="noopener">大爱的博客</a></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;通用开发框架&quot;&gt;&lt;a href=&quot;#通用开发框架&quot; class=&quot;headerlink&quot; title=&quot;通用开发框架&quot;&gt;&lt;/a&gt;通用开发框架&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;electorn：基于node-js，跨平台，开发成本低，运行效率低&lt;/li&gt;
&lt;li&gt;qt：基
      
    
    </summary>
    
      <category term="Python" scheme="https://lhalcyon.com/categories/Python/"/>
    
    
      <category term="PyQt5" scheme="https://lhalcyon.com/tags/PyQt5/"/>
    
  </entry>
  
  <entry>
    <title>解决Docker镜像拉取慢</title>
    <link href="https://lhalcyon.com/docker-pull-speedup/"/>
    <id>https://lhalcyon.com/docker-pull-speedup/</id>
    <published>2021-01-20T08:02:11.000Z</published>
    <updated>2021-03-22T12:21:06.157Z</updated>
    
    <content type="html"><![CDATA[<div class="note info"><p>在国内服务器上操作 Docker 拉取镜像太慢 ,无非是镜像在国外 . 解决办法就是配置国内镜像源 , 一般由阿里、网易、docker 中国官方等等</p></div><h4 id="推荐方案"><a href="#推荐方案" class="headerlink" title="推荐方案"></a>推荐方案</h4><p><strong>1. </strong> 编辑 <code>/etc/docker/daemon.json</code> (若无 , 则创建) , 添加以下 json </p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"registry-mirrors"</span>: [<span class="string">"https://docker.mirrors.ustc.edu.cn"</span>, <span class="string">"http://hub-mirror.c.163.com"</span>, <span class="string">"https://registry.docker-cn.com"</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p> <strong>2.</strong>  重启 docker 服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure><h4 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h4><p><a href="https://www.cnblogs.com/Neeo/articles/12726262.html" target="_blank" rel="noopener">Docker - 解决镜像拉取慢</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;div class=&quot;note info&quot;&gt;&lt;p&gt;在国内服务器上操作 Docker 拉取镜像太慢 ,无非是镜像在国外 . 解决办法就是配置国内镜像源 , 一般由阿里、网易、docker 中国官方等等&lt;/p&gt;&lt;/div&gt;
&lt;h4 id=&quot;推荐方案&quot;&gt;&lt;a href=&quot;#推荐方案&quot;
      
    
    </summary>
    
      <category term="Docker" scheme="https://lhalcyon.com/categories/Docker/"/>
    
    
      <category term="Docker" scheme="https://lhalcyon.com/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>TextView添加SpannableString并设置点击色</title>
    <link href="https://lhalcyon.com/spannablestring-issue/"/>
    <id>https://lhalcyon.com/spannablestring-issue/</id>
    <published>2020-12-08T16:00:00.000Z</published>
    <updated>2021-03-22T12:21:06.156Z</updated>
    
    <content type="html"><![CDATA[<div class="note info"><p>通常在项目的注册等服务页面 , 会有一些条款 <code>注册即表示同意《xx服务协议》</code>  , 开发需要对服务协议的部分设置超链点击. 通常我们用 <code>SpannableString</code> 来实现富文本功能 , 下面将说明使用方法及遇到的问题. </p></div><a id="more"></a><p>在搜索引擎帮助下 ,  常规做法是这样</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">      TextView tv = (TextView) findViewById(R.id.tv_content);</span><br><span class="line">      String content = <span class="string">"This is a text,click me"</span> ;</span><br><span class="line">      SpannableString spannableString = <span class="keyword">new</span> SpannableString(content);</span><br><span class="line">      spannableString.setSpan(<span class="keyword">new</span> Clickable(v -&gt; &#123;</span><br><span class="line">              <span class="comment">// 点击事件</span></span><br><span class="line">          &#125;), start, end,Spanned.SPAN_EXCLUSIVE_EXCLUSIVE);</span><br><span class="line"><span class="comment">// 必须设置否则无法点击</span></span><br><span class="line">      tv.setMovementMethod(LinkMovementMethod.getInstance());</span><br><span class="line"><span class="comment">// 不设置该属性，点击后会有背景色</span></span><br><span class="line">      tv.setHighlightColor(getResources().getColor(android.R.color.transparent));</span><br><span class="line">      tv.setText(spannableString);</span><br></pre></td></tr></table></figure><p>这里使用 <code>setHighlightColor(...)</code> API 的原因是在点击富文本中的链接后 , 链接背景会变为系统主题中的默认 Highlight 颜色 , Android 4.0 以上默认是淡绿色(低版本中是黄色) , 产生 UI 效果的不协调 , 所以这里设置其为透明.</p><p>然而这样设置后 , 仍有点击超链的时候界面无任何 UI 响应 ,  超链还有下划线等问题 , 于是需要进行一些自定义.</p><h4 id="自定义"><a href="#自定义" class="headerlink" title="自定义"></a>自定义</h4><p><code>TouchableSpan.java</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">TouchableSpan</span> <span class="keyword">extends</span> <span class="title">ClickableSpan</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> mIsPressed;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> mNormalTextColor;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> mPressedTextColor;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">TouchableSpan</span><span class="params">(<span class="keyword">int</span> normalTextColor, <span class="keyword">int</span> pressedTextColor)</span> </span>&#123;</span><br><span class="line">        mNormalTextColor = normalTextColor;</span><br><span class="line">        mPressedTextColor = pressedTextColor;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setPressed</span><span class="params">(<span class="keyword">boolean</span> isSelected)</span> </span>&#123;</span><br><span class="line">        mIsPressed = isSelected;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updateDrawState</span><span class="params">(TextPaint ds)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.updateDrawState(ds);</span><br><span class="line">        ds.setColor(mIsPressed ? mPressedTextColor : mNormalTextColor);</span><br><span class="line">        ds.setUnderlineText(<span class="keyword">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>设置文字点击颜色</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LinkTouchMovementMethod</span> <span class="keyword">extends</span> <span class="title">LinkMovementMethod</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> TouchableSpan mPressedSpan;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onTouchEvent</span><span class="params">(TextView textView, Spannable spannable, MotionEvent event)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (event.getAction() == MotionEvent.ACTION_DOWN) &#123;</span><br><span class="line">            mPressedSpan = getPressedSpan(textView, spannable, event);</span><br><span class="line">            <span class="keyword">if</span> (mPressedSpan != <span class="keyword">null</span>) &#123;</span><br><span class="line">                mPressedSpan.setPressed(<span class="keyword">true</span>);</span><br><span class="line">                Selection.setSelection(spannable, spannable.getSpanStart(mPressedSpan),</span><br><span class="line">                        spannable.getSpanEnd(mPressedSpan));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (event.getAction() == MotionEvent.ACTION_MOVE) &#123;</span><br><span class="line">            TouchableSpan touchedSpan = getPressedSpan(textView, spannable, event);</span><br><span class="line">            <span class="keyword">if</span> (mPressedSpan != <span class="keyword">null</span> &amp;&amp; touchedSpan != mPressedSpan) &#123;</span><br><span class="line">                mPressedSpan.setPressed(<span class="keyword">false</span>);</span><br><span class="line">                mPressedSpan = <span class="keyword">null</span>;</span><br><span class="line">                Selection.removeSelection(spannable);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (mPressedSpan != <span class="keyword">null</span>) &#123;</span><br><span class="line">                mPressedSpan.setPressed(<span class="keyword">false</span>);</span><br><span class="line">                <span class="keyword">super</span>.onTouchEvent(textView, spannable, event);</span><br><span class="line">            &#125;</span><br><span class="line">            mPressedSpan = <span class="keyword">null</span>;</span><br><span class="line">            Selection.removeSelection(spannable);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> TouchableSpan <span class="title">getPressedSpan</span><span class="params">(TextView textView, Spannable spannable, MotionEvent event)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> x = (<span class="keyword">int</span>) event.getX();</span><br><span class="line">        <span class="keyword">int</span> y = (<span class="keyword">int</span>) event.getY();</span><br><span class="line"></span><br><span class="line">        x -= textView.getTotalPaddingLeft();</span><br><span class="line">        y -= textView.getTotalPaddingTop();</span><br><span class="line"></span><br><span class="line">        x += textView.getScrollX();</span><br><span class="line">        y += textView.getScrollY();</span><br><span class="line"></span><br><span class="line">        Layout layout = textView.getLayout();</span><br><span class="line">        <span class="keyword">int</span> line = layout.getLineForVertical(y);</span><br><span class="line">        <span class="keyword">int</span> off = layout.getOffsetForHorizontal(line, x);</span><br><span class="line"></span><br><span class="line">        TouchableSpan[] link = spannable.getSpans(off, off, TouchableSpan.class);</span><br><span class="line">        TouchableSpan touchedSpan = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">if</span> (link.length &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            touchedSpan = link[<span class="number">0</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> touchedSpan;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>工具类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SpannableStringUtils</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">SpannableStringUtils</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> UnsupportedOperationException(<span class="string">"u can't instantiate me..."</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取建造者</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> &#123;<span class="doctag">@link</span> Builder&#125;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Builder <span class="title">getBuilder</span><span class="params">(@NonNull CharSequence text)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Builder(text);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">Builder</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">int</span> defaultValue = <span class="number">0x12000000</span>;</span><br><span class="line">        <span class="keyword">private</span> CharSequence text;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">int</span> flag;</span><br><span class="line">        <span class="meta">@ColorInt</span></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">int</span> foregroundColor;</span><br><span class="line">        <span class="meta">@ColorInt</span></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">int</span> backgroundColor;</span><br><span class="line">        <span class="meta">@ColorInt</span></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">int</span> quoteColor;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">boolean</span> isLeadingMargin;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">int</span> first;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">int</span> rest;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">boolean</span> isBullet;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">int</span> gapWidth;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">int</span> bulletColor;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">float</span> proportion;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">float</span> xProportion;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">boolean</span> isStrikethrough;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">boolean</span> isUnderline;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">boolean</span> isSuperscript;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">boolean</span> isSubscript;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">boolean</span> isBold;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">boolean</span> isItalic;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">boolean</span> isBoldItalic;</span><br><span class="line">        <span class="keyword">private</span> String fontFamily;</span><br><span class="line">        <span class="keyword">private</span> Layout.Alignment align;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">boolean</span> imageIsBitmap;</span><br><span class="line">        <span class="keyword">private</span> Bitmap bitmap;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">boolean</span> imageIsDrawable;</span><br><span class="line">        <span class="keyword">private</span> Drawable drawable;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">boolean</span> imageIsUri;</span><br><span class="line">        <span class="keyword">private</span> Uri uri;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">boolean</span> imageIsResourceId;</span><br><span class="line">        <span class="meta">@DrawableRes</span></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">int</span> resourceId;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> TouchableSpan clickSpan;</span><br><span class="line">        <span class="keyword">private</span> String url;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">boolean</span> isBlur;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">float</span> radius;</span><br><span class="line">        <span class="keyword">private</span> BlurMaskFilter.Blur style;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">private</span> SpannableStringBuilder mBuilder;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="title">Builder</span><span class="params">(@NonNull CharSequence text)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.text = text;</span><br><span class="line">            flag = Spanned.SPAN_EXCLUSIVE_EXCLUSIVE;</span><br><span class="line">            foregroundColor = defaultValue;</span><br><span class="line">            backgroundColor = defaultValue;</span><br><span class="line">            quoteColor = defaultValue;</span><br><span class="line">            proportion = -<span class="number">1</span>;</span><br><span class="line">            xProportion = -<span class="number">1</span>;</span><br><span class="line">            mBuilder = <span class="keyword">new</span> SpannableStringBuilder();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 设置标识</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> flag &lt;ul&gt;</span></span><br><span class="line"><span class="comment">         *             &lt;li&gt;&#123;<span class="doctag">@link</span> Spanned#SPAN_INCLUSIVE_EXCLUSIVE&#125;&lt;/li&gt;</span></span><br><span class="line"><span class="comment">         *             &lt;li&gt;&#123;<span class="doctag">@link</span> Spanned#SPAN_INCLUSIVE_INCLUSIVE&#125;&lt;/li&gt;</span></span><br><span class="line"><span class="comment">         *             &lt;li&gt;&#123;<span class="doctag">@link</span> Spanned#SPAN_EXCLUSIVE_EXCLUSIVE&#125;&lt;/li&gt;</span></span><br><span class="line"><span class="comment">         *             &lt;li&gt;&#123;<span class="doctag">@link</span> Spanned#SPAN_EXCLUSIVE_INCLUSIVE&#125;&lt;/li&gt;</span></span><br><span class="line"><span class="comment">         *             &lt;/ul&gt;</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@return</span> &#123;<span class="doctag">@link</span> Builder&#125;</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Builder <span class="title">setFlag</span><span class="params">(<span class="keyword">int</span> flag)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.flag = flag;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 设置前景色</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> color 前景色</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@return</span> &#123;<span class="doctag">@link</span> Builder&#125;</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Builder <span class="title">setForegroundColor</span><span class="params">(@ColorInt <span class="keyword">int</span> color)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.foregroundColor = color;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 设置背景色</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> color 背景色</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@return</span> &#123;<span class="doctag">@link</span> Builder&#125;</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Builder <span class="title">setBackgroundColor</span><span class="params">(@ColorInt <span class="keyword">int</span> color)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.backgroundColor = color;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 设置引用线的颜色</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> color 引用线的颜色</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@return</span> &#123;<span class="doctag">@link</span> Builder&#125;</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Builder <span class="title">setQuoteColor</span><span class="params">(@ColorInt <span class="keyword">int</span> color)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.quoteColor = color;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 设置缩进</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> first 首行缩进</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> rest  剩余行缩进</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@return</span> &#123;<span class="doctag">@link</span> Builder&#125;</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Builder <span class="title">setLeadingMargin</span><span class="params">(<span class="keyword">int</span> first, <span class="keyword">int</span> rest)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.first = first;</span><br><span class="line">            <span class="keyword">this</span>.rest = rest;</span><br><span class="line">            isLeadingMargin = <span class="keyword">true</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 设置列表标记</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> gapWidth 列表标记和文字间距离</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> color    列表标记的颜色</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@return</span> &#123;<span class="doctag">@link</span> Builder&#125;</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Builder <span class="title">setBullet</span><span class="params">(<span class="keyword">int</span> gapWidth, <span class="keyword">int</span> color)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.gapWidth = gapWidth;</span><br><span class="line">            bulletColor = color;</span><br><span class="line">            isBullet = <span class="keyword">true</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 设置字体比例</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> proportion 比例</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@return</span> &#123;<span class="doctag">@link</span> Builder&#125;</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Builder <span class="title">setProportion</span><span class="params">(<span class="keyword">float</span> proportion)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.proportion = proportion;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 设置字体横向比例</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> proportion 比例</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@return</span> &#123;<span class="doctag">@link</span> Builder&#125;</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Builder <span class="title">setXProportion</span><span class="params">(<span class="keyword">float</span> proportion)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.xProportion = proportion;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 设置删除线</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@return</span> &#123;<span class="doctag">@link</span> Builder&#125;</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Builder <span class="title">setStrikethrough</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.isStrikethrough = <span class="keyword">true</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 设置下划线</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@return</span> &#123;<span class="doctag">@link</span> Builder&#125;</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Builder <span class="title">setUnderline</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.isUnderline = <span class="keyword">true</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 设置上标</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@return</span> &#123;<span class="doctag">@link</span> Builder&#125;</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Builder <span class="title">setSuperscript</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.isSuperscript = <span class="keyword">true</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 设置下标</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@return</span> &#123;<span class="doctag">@link</span> Builder&#125;</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Builder <span class="title">setSubscript</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.isSubscript = <span class="keyword">true</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 设置粗体</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@return</span> &#123;<span class="doctag">@link</span> Builder&#125;</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Builder <span class="title">setBold</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            isBold = <span class="keyword">true</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 设置斜体</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@return</span> &#123;<span class="doctag">@link</span> Builder&#125;</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Builder <span class="title">setItalic</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            isItalic = <span class="keyword">true</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 设置粗斜体</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@return</span> &#123;<span class="doctag">@link</span> Builder&#125;</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Builder <span class="title">setBoldItalic</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            isBoldItalic = <span class="keyword">true</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 设置字体</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> fontFamily 字体</span></span><br><span class="line"><span class="comment">         *                   &lt;ul&gt;</span></span><br><span class="line"><span class="comment">         *                   &lt;li&gt;monospace&lt;/li&gt;</span></span><br><span class="line"><span class="comment">         *                   &lt;li&gt;serif&lt;/li&gt;</span></span><br><span class="line"><span class="comment">         *                   &lt;li&gt;sans-serif&lt;/li&gt;</span></span><br><span class="line"><span class="comment">         *                   &lt;/ul&gt;</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@return</span> &#123;<span class="doctag">@link</span> Builder&#125;</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Builder <span class="title">setFontFamily</span><span class="params">(@Nullable String fontFamily)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.fontFamily = fontFamily;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 设置对齐</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         *  Layout.Alignment align</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@return</span> &#123;<span class="doctag">@link</span> Builder&#125;</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Builder <span class="title">setAlign</span><span class="params">(@Nullable Layout.Alignment align)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.align = align;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 设置图片</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> bitmap 图片位图</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@return</span> &#123;<span class="doctag">@link</span> Builder&#125;</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Builder <span class="title">setBitmap</span><span class="params">(@NonNull Bitmap bitmap)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.bitmap = bitmap;</span><br><span class="line">            imageIsBitmap = <span class="keyword">true</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 设置图片</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> drawable 图片资源</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@return</span> &#123;<span class="doctag">@link</span> Builder&#125;</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Builder <span class="title">setDrawable</span><span class="params">(@NonNull Drawable drawable)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.drawable = drawable;</span><br><span class="line">            imageIsDrawable = <span class="keyword">true</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 设置图片</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> uri 图片uri</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@return</span> &#123;<span class="doctag">@link</span> Builder&#125;</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Builder <span class="title">setUri</span><span class="params">(@NonNull Uri uri)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.uri = uri;</span><br><span class="line">            imageIsUri = <span class="keyword">true</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 设置图片</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> resourceId 图片资源id</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@return</span> &#123;<span class="doctag">@link</span> Builder&#125;</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Builder <span class="title">setResourceId</span><span class="params">(@DrawableRes <span class="keyword">int</span> resourceId)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.resourceId = resourceId;</span><br><span class="line">            imageIsResourceId = <span class="keyword">true</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 设置点击事件</span></span><br><span class="line"><span class="comment">         * &lt;p&gt;需添加view.setMovementMethod(LinkMovementMethod.getInstance())&lt;/p&gt;</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> clickSpan 点击事件</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@return</span> &#123;<span class="doctag">@link</span> Builder&#125;</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Builder <span class="title">setClickSpan</span><span class="params">(@NonNull TouchableSpan clickSpan)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.clickSpan = clickSpan;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 设置超链接</span></span><br><span class="line"><span class="comment">         * &lt;p&gt;需添加view.setMovementMethod(LinkMovementMethod.getInstance())&lt;/p&gt;</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> url 超链接</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@return</span> &#123;<span class="doctag">@link</span> Builder&#125;</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Builder <span class="title">setUrl</span><span class="params">(@NonNull String url)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.url = url;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 设置模糊</span></span><br><span class="line"><span class="comment">         * &lt;p&gt;尚存bug，其他地方存在相同的字体的话，相同字体出现在之前的话那么就不会模糊，出现在之后的话那会一起模糊&lt;/p&gt;</span></span><br><span class="line"><span class="comment">         * &lt;p&gt;推荐还是把所有字体都模糊这样使用&lt;/p&gt;</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> radius 模糊半径（需大于0）</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> style  模糊样式&lt;ul&gt;</span></span><br><span class="line"><span class="comment">         *               &lt;li&gt;&#123;<span class="doctag">@link</span> Blur#NORMAL&#125;&lt;/li&gt;</span></span><br><span class="line"><span class="comment">         *               &lt;li&gt;&#123;<span class="doctag">@link</span> Blur#SOLID&#125;&lt;/li&gt;</span></span><br><span class="line"><span class="comment">         *               &lt;li&gt;&#123;<span class="doctag">@link</span> Blur#OUTER&#125;&lt;/li&gt;</span></span><br><span class="line"><span class="comment">         *               &lt;li&gt;&#123;<span class="doctag">@link</span> Blur#INNER&#125;&lt;/li&gt;</span></span><br><span class="line"><span class="comment">         *               &lt;/ul&gt;</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@return</span> &#123;<span class="doctag">@link</span> Builder&#125;</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Builder <span class="title">setBlur</span><span class="params">(<span class="keyword">float</span> radius, BlurMaskFilter.Blur style)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.radius = radius;</span><br><span class="line">            <span class="keyword">this</span>.style = style;</span><br><span class="line">            <span class="keyword">this</span>.isBlur = <span class="keyword">true</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 追加样式字符串</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> text 样式字符串文本</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@return</span> &#123;<span class="doctag">@link</span> Builder&#125;</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Builder <span class="title">append</span><span class="params">(@NonNull CharSequence text)</span> </span>&#123;</span><br><span class="line">            setSpan();</span><br><span class="line">            <span class="keyword">this</span>.text = text;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 创建样式字符串</span></span><br><span class="line"><span class="comment">         *</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@return</span> 样式字符串</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> SpannableStringBuilder <span class="title">create</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            setSpan();</span><br><span class="line">            <span class="keyword">return</span> mBuilder;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 设置样式</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">setSpan</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">int</span> start = mBuilder.length();</span><br><span class="line">            mBuilder.append(<span class="keyword">this</span>.text);</span><br><span class="line">            <span class="keyword">int</span> end = mBuilder.length();</span><br><span class="line">            <span class="keyword">if</span> (foregroundColor != defaultValue) &#123;</span><br><span class="line">                mBuilder.setSpan(<span class="keyword">new</span> ForegroundColorSpan(foregroundColor), start, end, flag);</span><br><span class="line">                foregroundColor = defaultValue;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (backgroundColor != defaultValue) &#123;</span><br><span class="line">                mBuilder.setSpan(<span class="keyword">new</span> BackgroundColorSpan(backgroundColor), start, end, flag);</span><br><span class="line">                backgroundColor = defaultValue;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (isLeadingMargin) &#123;</span><br><span class="line">                mBuilder.setSpan(<span class="keyword">new</span> LeadingMarginSpan.Standard(first, rest), start, end, flag);</span><br><span class="line">                isLeadingMargin = <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (quoteColor != defaultValue) &#123;</span><br><span class="line">                mBuilder.setSpan(<span class="keyword">new</span> QuoteSpan(quoteColor), start, end, <span class="number">0</span>);</span><br><span class="line">                quoteColor = defaultValue;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (isBullet) &#123;</span><br><span class="line">                mBuilder.setSpan(<span class="keyword">new</span> BulletSpan(gapWidth, bulletColor), start, end, <span class="number">0</span>);</span><br><span class="line">                isBullet = <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (proportion != -<span class="number">1</span>) &#123;</span><br><span class="line">                mBuilder.setSpan(<span class="keyword">new</span> RelativeSizeSpan(proportion), start, end, flag);</span><br><span class="line">                proportion = -<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (xProportion != -<span class="number">1</span>) &#123;</span><br><span class="line">                mBuilder.setSpan(<span class="keyword">new</span> ScaleXSpan(xProportion), start, end, flag);</span><br><span class="line">                xProportion = -<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (isStrikethrough) &#123;</span><br><span class="line">                mBuilder.setSpan(<span class="keyword">new</span> StrikethroughSpan(), start, end, flag);</span><br><span class="line">                isStrikethrough = <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (isUnderline) &#123;</span><br><span class="line">                mBuilder.setSpan(<span class="keyword">new</span> UnderlineSpan(), start, end, flag);</span><br><span class="line">                isUnderline = <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (isSuperscript) &#123;</span><br><span class="line">                mBuilder.setSpan(<span class="keyword">new</span> SuperscriptSpan(), start, end, flag);</span><br><span class="line">                isSuperscript = <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (isSubscript) &#123;</span><br><span class="line">                mBuilder.setSpan(<span class="keyword">new</span> SubscriptSpan(), start, end, flag);</span><br><span class="line">                isSubscript = <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (isBold) &#123;</span><br><span class="line">                mBuilder.setSpan(<span class="keyword">new</span> StyleSpan(Typeface.BOLD), start, end, flag);</span><br><span class="line">                isBold = <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (isItalic) &#123;</span><br><span class="line">                mBuilder.setSpan(<span class="keyword">new</span> StyleSpan(Typeface.ITALIC), start, end, flag);</span><br><span class="line">                isItalic = <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (isBoldItalic) &#123;</span><br><span class="line">                mBuilder.setSpan(<span class="keyword">new</span> StyleSpan(Typeface.BOLD_ITALIC), start, end, flag);</span><br><span class="line">                isBoldItalic = <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (fontFamily != <span class="keyword">null</span>) &#123;</span><br><span class="line">                mBuilder.setSpan(<span class="keyword">new</span> TypefaceSpan(fontFamily), start, end, flag);</span><br><span class="line">                fontFamily = <span class="keyword">null</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (align != <span class="keyword">null</span>) &#123;</span><br><span class="line">                mBuilder.setSpan(<span class="keyword">new</span> AlignmentSpan.Standard(align), start, end, flag);</span><br><span class="line">                align = <span class="keyword">null</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (imageIsBitmap || imageIsDrawable || imageIsUri || imageIsResourceId) &#123;</span><br><span class="line">                <span class="keyword">if</span> (imageIsBitmap) &#123;</span><br><span class="line">                    mBuilder.setSpan(<span class="keyword">new</span> ImageSpan(App.getApp(), bitmap), start, end, flag);</span><br><span class="line">                    bitmap = <span class="keyword">null</span>;</span><br><span class="line">                    imageIsBitmap = <span class="keyword">false</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (imageIsDrawable) &#123;</span><br><span class="line">                    mBuilder.setSpan(<span class="keyword">new</span> ImageSpan(drawable), start, end, flag);</span><br><span class="line">                    drawable = <span class="keyword">null</span>;</span><br><span class="line">                    imageIsDrawable = <span class="keyword">false</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (imageIsUri) &#123;</span><br><span class="line">                    mBuilder.setSpan(<span class="keyword">new</span> ImageSpan(App.getApp(), uri), start, end, flag);</span><br><span class="line">                    uri = <span class="keyword">null</span>;</span><br><span class="line">                    imageIsUri = <span class="keyword">false</span>;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    mBuilder.setSpan(<span class="keyword">new</span> ImageSpan(App.getApp(), resourceId), start, end, flag);</span><br><span class="line">                    resourceId = <span class="number">0</span>;</span><br><span class="line">                    imageIsResourceId = <span class="keyword">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (clickSpan != <span class="keyword">null</span>) &#123;</span><br><span class="line">                mBuilder.setSpan(clickSpan, start, end, flag);</span><br><span class="line">                clickSpan = <span class="keyword">null</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (url != <span class="keyword">null</span>) &#123;</span><br><span class="line">                mBuilder.setSpan(<span class="keyword">new</span> URLSpan(url), start, end, flag);</span><br><span class="line">                url = <span class="keyword">null</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (isBlur) &#123;</span><br><span class="line">                mBuilder.setSpan(<span class="keyword">new</span> MaskFilterSpan(<span class="keyword">new</span> BlurMaskFilter(radius, style)), start, end, flag);</span><br><span class="line">                isBlur = <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            flag = Spanned.SPAN_EXCLUSIVE_EXCLUSIVE;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">SpannableStringBuilder builder = SpannableStringUtils</span><br><span class="line">        .getBuilder(<span class="string">"登录/注册表示您同意"</span>)</span><br><span class="line">        .append(<span class="string">" 《xxx隐私政策》 "</span>)</span><br><span class="line">        .setForegroundColor(linkColor)</span><br><span class="line">        .setClickSpan(<span class="keyword">new</span> TouchableSpan(linkColor,linkPressedColor) &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View widget)</span> </span>&#123;</span><br><span class="line">                <span class="comment">// 点击事件</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">        .append(<span class="string">"和"</span>)</span><br><span class="line">        .append(<span class="string">" 《xxx服务协议》 "</span>)</span><br><span class="line">        .setForegroundColor(linkColor)</span><br><span class="line">        .setClickSpan(<span class="keyword">new</span> TouchableSpan(linkColor,linkPressedColor) &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View widget)</span> </span>&#123;</span><br><span class="line">                <span class="comment">// 点击事件</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;).create();</span><br><span class="line"> textView.setText(builder);</span><br><span class="line"> textView.setHighlightColor(transparent);</span><br><span class="line"> textView.setMovementMethod(<span class="keyword">new</span> LinkTouchMovementMethod());</span><br></pre></td></tr></table></figure><p>综上即可实现功能并解决提及问题</p><h4 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h4><p><a href="https://juejin.cn/post/6844903509163245576" target="_blank" rel="noopener">掘金:TextView添加SpannableString并添加点击色</a></p>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note info&quot;&gt;&lt;p&gt;通常在项目的注册等服务页面 , 会有一些条款 &lt;code&gt;注册即表示同意《xx服务协议》&lt;/code&gt;  , 开发需要对服务协议的部分设置超链点击. 通常我们用 &lt;code&gt;SpannableString&lt;/code&gt; 来实现富文本功能 , 下面将说明使用方法及遇到的问题. &lt;/p&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="Android" scheme="https://lhalcyon.com/categories/Android/"/>
    
    
      <category term="SpannableString" scheme="https://lhalcyon.com/tags/SpannableString/"/>
    
  </entry>
  
  <entry>
    <title>转-BottomSheet详解</title>
    <link href="https://lhalcyon.com/bottomsheet/"/>
    <id>https://lhalcyon.com/bottomsheet/</id>
    <published>2020-11-04T16:00:00.000Z</published>
    <updated>2021-03-25T15:23:14.337Z</updated>
    
    <content type="html"><![CDATA[<div class="note info"><p>本文转自 <a href="https://juejin.cn/post/6844904081064984584" target="_blank" rel="noopener">掘金: BottomSheet详解</a> </p></div><h4 id="关系"><a href="#关系" class="headerlink" title="关系"></a>关系</h4><ol><li><code>BottomSheet</code>不是真正存在的类，而是一种称呼，表示该种控件类型，参照Google翻译，本文以下称之为“底页”，就是从屏幕底部弹出的工具条。与之对应是<code>BottomSheetBehavior</code>的行为类，它需要附属某个控件使用。该行为性质包括：<ul><li>可以从底部弹出</li><li>可以上下拖拽布局</li><li>可以单击淡黑色遮罩隐藏/关闭</li></ul></li><li><code>BottomSheetDialog</code>继承<code>Dialog</code>，是一种对话框，它是拥有<code>BottomSheetBehavior</code>行为的对话框，从而实现从底部弹出和上下拉伸的效果。</li><li><code>BottomSheetDialogFragment</code>是包含<code>BottomSheetDialog</code>的片段（<code>Fragment</code>），所以它可以同时利用<code>Fragment</code>的特点和<code>BottomSheet</code>这一交互效果</li></ol><a id="more"></a><h4 id="BottomSheetBehavior"><a href="#BottomSheetBehavior" class="headerlink" title="BottomSheetBehavior"></a>BottomSheetBehavior</h4><h5 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h5><p>在xml布局文件中与<code>CoordinatorLayout</code>配合使用。如下设置后，<code>NestedScrollView</code>具有<code>BottomSheetBehavior</code>的性质，且一开始就显示在布局中，初始的显示高度为<code>peekHeight</code>值。背景没有淡黑色遮罩，可以上下拖拽。</p><ul><li>关键语句<code>app:layout_behavior=&quot;@string/bottom_sheet_behavior&quot;</code>。</li><li><code>NestedScrollView</code>的子视图只能有一个。</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span><br><span class="line"><span class="tag">&lt;<span class="name">android.support.design.widget.CoordinatorLayout</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:app</span>=<span class="string">"http://schemas.android.com/apk/res-auto"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:fitsSystemWindows</span>=<span class="string">"true"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">android.support.v4.widget.NestedScrollView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/bottom_sheet"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:behavior_hideable</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:behavior_peekHeight</span>=<span class="string">"50dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">app:layout_behavior</span>=<span class="string">"@string/bottom_sheet_behavior"</span>&gt;</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">&lt;!--内部布局--&gt;</span></span><br><span class="line">        </span><br><span class="line">    <span class="tag">&lt;/<span class="name">android.support.v4.widget.NestedScrollView</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">android.support.design.widget.CoordinatorLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p>上述代码中有两个属性值得注意。</p><p><code>app:behavior_hideable</code>：当我们上下拖拽时，布局是否可以全部隐藏。如果设置为真，那么你向下滑完之后，布局会被隐藏起来，然后就滑不出来了。。。（除非你写了按钮之类的逻辑控制它的行为）所以要谨慎。</p><p><code>app:behavior_peekHeight</code>：是当底页关闭的时候，底部我们能看到的高度，默认是0不可见。</p><h5 id="获取行为"><a href="#获取行为" class="headerlink" title="获取行为"></a>获取行为</h5><p>在布局文件中声明之后，就可以在代码中获取行为了。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 获取视图</span></span><br><span class="line">View = findViewById(R.id.bottom_sheet);</span><br><span class="line"><span class="comment">// 获取行为</span></span><br><span class="line">BottomSheetBehavior behavior = BottomSheetBehavior.from(view);</span><br></pre></td></tr></table></figure><h5 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h5><p>行为的一些常用的方法。</p><table><thead><tr><th>方法名</th><th>用法示例</th><th>说明</th></tr></thead><tbody><tr><td><code>setHideable</code></td><td>setHideable(true)</td><td>对应<code>app:behavior_hideable</code>属性</td></tr><tr><td><code>setPeekHeight</code></td><td>setPeekHeight(500)</td><td>对应<code>app:behavior_peekHeight</code>属性</td></tr><tr><td><code>setBottomSheetCallback</code></td><td>/</td><td>设置监听回调</td></tr><tr><td><code>setState</code></td><td>setState(BottomSheetBehavior.STATE_EXPANDED)</td><td>设置底页状态</td></tr></tbody></table><h5 id="BottomSheetCallback"><a href="#BottomSheetCallback" class="headerlink" title="BottomSheetCallback"></a>BottomSheetCallback</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">behavior.setBottomSheetCallback(<span class="keyword">new</span> BottomSheetBehavior.BottomSheetCallback() &#123;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onStateChanged</span><span class="params">(@NonNull View bottomSheet, <span class="keyword">int</span> newState)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">//监听BottomSheet状态的改变</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onSlide</span><span class="params">(@NonNull View bottomSheet, <span class="keyword">float</span> slideOffset)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">//监听拖拽中的回调，根据slideOffset可以做一些动画</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>底页行为一共有五种状态。</p><ul><li><p><code>STATE_HIDDEN</code>: 隐藏状态。默认是false，可通过<code>app:behavior_hideable</code>属性设置。</p></li><li><p><code>STATE_COLLAPSED</code>: 折叠关闭状态。可通过<code>app:behavior_peekHeight</code>来设置显示的高度，peekHeight默认是0。</p></li><li><p><code>STATE_DRAGGING</code>: 被拖拽状态</p></li><li><p><code>STATE_SETTLING</code>: 拖拽松开之后到达终点位置（collapsed or expanded）前的状态。</p></li><li><p><code>STATE_EXPANDED</code>: 完全展开的状态。</p></li></ul><h4 id="BottomSheetDialog"><a href="#BottomSheetDialog" class="headerlink" title="BottomSheetDialog"></a>BottomSheetDialog</h4><p>这是具有底页行为性质的对话框，不需要与<code>CoordinatorLayout</code>配合使用。弹出时，背景为出现一层淡黑色遮罩。需要相关逻辑控制它的弹出。</p><h5 id="使用布局文件"><a href="#使用布局文件" class="headerlink" title="使用布局文件"></a>使用布局文件</h5><p>设计<code>BottomSheetDialog</code>内部的视图。Xml可以不用被<code>CoordinatorLayout</code>包裹，但是还是推荐实用推荐的滑动控件<code>NestedScrollView</code>。</p><h5 id="使用代码"><a href="#使用代码" class="headerlink" title="使用代码"></a>使用代码</h5><p>使用上述的布局文件，假设名称为<code>layout_bsd</code>。可以获取行为实现自定义。要注意的是从视图的父视图（<code>(View)view.getParent()</code>）获取底页行为，否则会报错：</p><blockquote><p>The view is not a child of CoordinatorLayout.</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">BottomSheetDialog dialog = <span class="keyword">new</span> BottomSheetDialog(context);</span><br><span class="line">View view = getLayoutInflater.inflate(R.layout.layout_bsd, <span class="keyword">null</span>);</span><br><span class="line">dialog.setContentView(view);</span><br><span class="line"><span class="comment">// 获取行为，用于自定义</span></span><br><span class="line">BottomSheetBehavior behavior = BottomSheetBehavior.from((View)view.getParent());</span><br><span class="line">dialog.show();</span><br></pre></td></tr></table></figure><h4 id="BottomSheetDialogFragment"><a href="#BottomSheetDialogFragment" class="headerlink" title="BottomSheetDialogFragment"></a>BottomSheetDialogFragment</h4><p>有两种用法。</p><ul><li>当作中装了一个底页对话框的<code>Fragment</code>。实际是与底页对话框的作用和使用方法是相同的。</li><li>具有底页行为的<code>Fragment</code>。</li></ul><h5 id="用法1-披着-Fragment-外衣的-Dialog"><a href="#用法1-披着-Fragment-外衣的-Dialog" class="headerlink" title="用法1 披着 Fragment 外衣的 Dialog"></a>用法1 披着 Fragment 外衣的 Dialog</h5><p>重写<code>BottomSheetDialogFragment</code>中的<code>onCreateDialog</code>方法。可以看到和上面<code>BottomSheetDialog</code>的代码是相同的。同样可以在中间获取行为用于自定义。要注意是子视图的扩充用到的是<code>View.inflate</code>的静态方法，否则会报错。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> Dialog <span class="title">onCreateDialog</span><span class="params">(Bundle savedInstanceState)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    BottomSheetDialog dialog = (BottomSheetDialog) <span class="keyword">super</span>.onCreateDialog(savedInstanceState);</span><br><span class="line">    View view = View.inflate(getContext(), R.layout.dialog_bottom_sheet, <span class="keyword">null</span>);</span><br><span class="line">    dialog.setContentView(view);</span><br><span class="line">    mBehavior = BottomSheetBehavior.from((View) view.getParent());</span><br><span class="line">    <span class="keyword">return</span> dialog;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="用法2-Fragment"><a href="#用法2-Fragment" class="headerlink" title="用法2 Fragment"></a>用法2 Fragment</h5><p>重写<code>BottomSheetDialogFragment</code>中的<code>onCreateView</code>方法。代码与<code>Fragment</code>的常规写法相同。不过不好的一点是不容易获取行为。如果要强行获取行为的话，可以使用以下的代码。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onStart</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">super</span>.onStart();</span><br><span class="line">    Dialog dialog = getDialog();</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (dialog != <span class="keyword">null</span>) &#123;</span><br><span class="line">        View bottomSheet = dialog.findViewById(R.id.design_bottom_sheet);</span><br><span class="line">        bottomSheet.getLayoutParams().height = ViewGroup.LayoutParams.MATCH_PARENT;</span><br><span class="line">    &#125;</span><br><span class="line">    View view = getView();</span><br><span class="line">    view.post(() -&gt; &#123;</span><br><span class="line">        View parent = (View) view.getParent();</span><br><span class="line">        CoordinatorLayout.LayoutParams params = (CoordinatorLayout.LayoutParams) (parent).getLayoutParams();</span><br><span class="line">        CoordinatorLayout.Behavior behavior = params.getBehavior();</span><br><span class="line">        BottomSheetBehavior bottomSheetBehavior = (BottomSheetBehavior) behavior;</span><br><span class="line">        bottomSheetBehavior.setPeekHeight(view.getMeasuredHeight());</span><br><span class="line">        ((View)bottomSheet.getParent()).setBackgroundColor(Color.TRANSPARENT);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>但是如果这两个方法都重写了，那么以<code>onCreateView</code>里的视图为准，<code>onCreateDialog</code>会被覆盖。</p><h4 id="扩展-通过设置style实现圆角样式"><a href="#扩展-通过设置style实现圆角样式" class="headerlink" title="扩展: 通过设置style实现圆角样式"></a>扩展: 通过设置style实现圆角样式</h4><p>如下设置好之后，在创建<code>BottomSheetDialog</code>时传入样式。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BottomSheetDialog dialog = <span class="keyword">new</span> BottomSheetDialog(context, R.style.BottomSheetDialog);</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--styles.xml文件--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">"BottomSheet"</span> <span class="attr">parent</span>=<span class="string">"Widget.Design.BottomSheet.Modal"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="xml">    <span class="comment">&lt;!--背景，顶部两个圆角--&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">"android:background"</span>&gt;</span>@drawable/bg_bottom_sheet<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">"BottomSheetDialog"</span> <span class="attr">parent</span>=<span class="string">"Theme.Design.Light.BottomSheetDialog"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">"android:windowIsFloating"</span>&gt;</span>false<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="comment">&lt;!--底部弹出条的样式（相当于背景）--&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">"bottomSheetStyle"</span>&gt;</span>@style/BottomSheet<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="comment">&lt;!--状态栏颜色--&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">"android:statusBarColor"</span>&gt;</span>@color/transparent<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="comment">&lt;!--导航条颜色--&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">"android:navigationBarColor"</span>&gt;</span>@color/white<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--以下是@drawable/bg_bottom_sheet--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">shape</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:shape</span>=<span class="string">"rectangle"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">corners</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:topLeftRadius</span>=<span class="string">"16dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:topRightRadius</span>=<span class="string">"16dp"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">corners</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">solid</span> <span class="attr">android:color</span>=<span class="string">"@android:color/white"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">padding</span> <span class="attr">android:top</span>=<span class="string">"16dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:left</span>=<span class="string">"8dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:right</span>=<span class="string">"8dp"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">shape</span>&gt;</span></span><br></pre></td></tr></table></figure><p>效果图</p><p><img src="https://lhalcyon-1258836598.cos.ap-shenzhen-fsi.myqcloud.com/blog/170a3f6a5777f744 (1" alt="">.png)</p><h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><p><a href="https://www.jianshu.com/p/0a7383e0ad0f" target="_blank" rel="noopener">BottomSheet、BottomSheetDialog使用详解</a></p><p><a href="https://stackoverflow.com/questions/36030879/bottomsheetdialogfragment-how-to-set-expanded-height-or-min-top-offset" target="_blank" rel="noopener">StackOverflow</a></p>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note info&quot;&gt;&lt;p&gt;本文转自 &lt;a href=&quot;https://juejin.cn/post/6844904081064984584&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;掘金: BottomSheet详解&lt;/a&gt; &lt;/p&gt;&lt;/div&gt;
&lt;h4 id=&quot;关系&quot;&gt;&lt;a href=&quot;#关系&quot; class=&quot;headerlink&quot; title=&quot;关系&quot;&gt;&lt;/a&gt;关系&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;&lt;code&gt;BottomSheet&lt;/code&gt;不是真正存在的类，而是一种称呼，表示该种控件类型，参照Google翻译，本文以下称之为“底页”，就是从屏幕底部弹出的工具条。与之对应是&lt;code&gt;BottomSheetBehavior&lt;/code&gt;的行为类，它需要附属某个控件使用。该行为性质包括：&lt;ul&gt;
&lt;li&gt;可以从底部弹出&lt;/li&gt;
&lt;li&gt;可以上下拖拽布局&lt;/li&gt;
&lt;li&gt;可以单击淡黑色遮罩隐藏/关闭&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BottomSheetDialog&lt;/code&gt;继承&lt;code&gt;Dialog&lt;/code&gt;，是一种对话框，它是拥有&lt;code&gt;BottomSheetBehavior&lt;/code&gt;行为的对话框，从而实现从底部弹出和上下拉伸的效果。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;BottomSheetDialogFragment&lt;/code&gt;是包含&lt;code&gt;BottomSheetDialog&lt;/code&gt;的片段（&lt;code&gt;Fragment&lt;/code&gt;），所以它可以同时利用&lt;code&gt;Fragment&lt;/code&gt;的特点和&lt;code&gt;BottomSheet&lt;/code&gt;这一交互效果&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="Android" scheme="https://lhalcyon.com/categories/Android/"/>
    
    
      <category term="BottomSheet" scheme="https://lhalcyon.com/tags/BottomSheet/"/>
    
  </entry>
  
  <entry>
    <title>转-Dockerfile详解</title>
    <link href="https://lhalcyon.com/dockerfile/"/>
    <id>https://lhalcyon.com/dockerfile/</id>
    <published>2020-10-09T16:00:00.000Z</published>
    <updated>2021-03-22T12:21:06.156Z</updated>
    
    <content type="html"><![CDATA[<div class="note info"><p>一段时间未写 Dockerfile , 有些忘记编写规则 , 于是转发一篇详解文章 , 以做记录</p><p>本文转自 <a href="https://segmentfault.com/a/1190000038194699?hmsr=toutiao.io&amp;utm=&amp;utm_medium=toutiao.io&amp;utm_source=toutiao.io" target="_blank" rel="noopener">看完这篇,再也不用担心不会写dockerfile了</a></p></div><a id="more"></a><p>Dockerfile是Docker用来构建镜像的文本文件,包括自定义的指令和格式。可以通过docker build命令从Dockerfile中构建镜像。用户可以通过统一的语法命令来根据需求进行配置，通过这份统一的配置文件，在不同的文件上进行分发，需要使用时就可以根据配置文件进行自动化构建，这解决了开发人员构建镜像的复杂过程。</p><h4 id="Dockerfile使用"><a href="#Dockerfile使用" class="headerlink" title="Dockerfile使用"></a>Dockerfile使用</h4><p>Dockerfile描述了组装对象的步骤，其中每条指令都是单独运行的。除了FROM指令，其他每条命令都会在上一条指令所生成镜像的基础上执行，执行完后会生成一个新的镜像层，新的镜像层覆盖在原来的镜像之上从而形成了新的镜像。Dockerfile所生成的最终镜像就是在基础镜像上面叠加一层层的镜像层组建的。</p><h4 id="Dockerfile指令"><a href="#Dockerfile指令" class="headerlink" title="Dockerfile指令"></a>Dockerfile指令</h4><p>Dockerfile的基本格式如下:</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Comment</span></span><br><span class="line">INSTRUCTION arguments</span><br></pre></td></tr></table></figure><p>在Dockerfile中,指令(INSTRUCTION)不区分大小写，但是为了与参数区分，推荐大写。<br>Docker会顺序执行Dockerfile中的指令，第一条指令必须是FROM指令，它用于指定构建镜像的基础镜像。在Dockerfile中以#开头的行是注释，而在其他位置出现的#会被当成参数。</p><p>Dockerfile中的指令有FROM、MAINTAINER、RUN、CMD、EXPOSE、ENV、ADD、COPY、ENTRYPOING、VOLUME、USER、WORKDIR、ONBUILD,错误的指令会被忽略。下面将详细讲解一些重要的Docker指令。</p><h5 id="FROM"><a href="#FROM" class="headerlink" title="FROM"></a>FROM</h5><p>格式: <code>FROM &lt;image&gt;</code>  或者 <code>FROM &lt;image&gt;:&lt;tag&gt;</code></p><p>FROM指令的功能是为后面的指令提供基础镜像,因此Dockerfile必须以FROM指令作为第一条非注释指令。从公共镜像库中拉取镜像很容易,基础镜像可以选择任何有效的镜像。<br>在一个Dockerfile中FROM指令可以出现多次,这样会构建多个镜像。tag的默认值是latest,如果参数image或者tag指定的镜像不存在，则返回错误。</p><h5 id="ENV"><a href="#ENV" class="headerlink" title="ENV"></a>ENV</h5><p>格式: <code>ENV &lt;key&gt; &lt;value&gt;</code> 或者 <code>ENV &lt;key&gt;=&lt;value&gt;</code></p><p>ENV指令可以为镜像创建出来的容器声明环境变量。并且在Dockerfile中，ENV指令声明的环境变量会被后面的特定指令(即ENV、ADD、COPY、WORKDIR、EXPOSE、VOLUME、USER)解释使用。</p><p>其他指令使用环境变量时，使用格式为<code>$variable_name</code>或者<code>${variable_name}</code>。如果在变量面前添加斜杠\可以转义。如<code>\\$foo</code>或者<code>\\${foo}</code>将会被转换为<code>$foo</code>和<code>${foo}</code>,而不是环境变量所保存的值。另外，ONBUILD指令不支持环境替换。</p><h5 id="COPY"><a href="#COPY" class="headerlink" title="COPY"></a>COPY</h5><p>格式: <code>COPY &lt;src&gt; &lt;dest&gt;</code></p><p>COPY指令复制<src>所指向的文件或目录,将它添加到新镜像中,复制的文件或目录在镜像中的路径是<code>&lt;dest&gt;</code>。<code>&lt;src&gt;</code>所指定的源可以有多个,但必须是上下文根目录中的相对路径。<br>不能只用形如 <code>COPY ../something /something</code>这样的指令。此外,<code>&lt;src&gt;</code>可以使用通配符指向所有匹配通配符的文件或目录，例如，COPY home* /mydir/ 表示添加所有以”hom”开头的文件到目录/mydir/中。</src></p><p><code>&lt;dest&gt;</code>可以是文件或目录，但必须是目标镜像中的绝对路径或者相对于WORKDIR的相对路径(WORKDIR即Dockerfile中WORKDIR指令指定的路径,用来为其他指令设置工作目录)。<br>若<code>&lt;dest&gt;</code>以反斜杠/结尾则其指向的是目录；否则指向文件。<code>&lt;src&gt;</code>同理。若<code>&lt;dest&gt;</code>是一个文件，则<code>&lt;src&gt;</code>的内容会被写到<code>&lt;dest&gt;</code>中；否则<code>&lt;src&gt;</code>指向的文件或目录中的内容会被复制添加到<code>&lt;dest&gt;</code>目录中。<br>当<code>&lt;src&gt;</code>指定多个源时，<code>&lt;dest&gt;</code>必须是目录。如果<code>&lt;dest&gt;</code>不存在，则路径中不存在的目录会被创建。</p><h5 id="ADD"><a href="#ADD" class="headerlink" title="ADD"></a>ADD</h5><p>格式: <code>ADD &lt;src&gt; &lt;dest&gt;</code></p><p>ADD与COPY指令在功能上很相似，都支持复制本地文件到镜像的功能，但ADD指令还支持其他功能。<code>&lt;src&gt;</code>可以是指向网络文件的URL,此时若<code>&lt;dest&gt;</code>指向一个目录，则URL必须是完全路径，这样可以获得网络文件的文件名filename，该文件会被复制添加到<code>&lt;dest&gt;/&lt;filename&gt;</code>。<br>比如 ADD <a href="http://example.com/config.property" target="_blank" rel="noopener">http://example.com/config.pro…</a> / 会创建文件/config.property。</p><p><code>&lt;src&gt;</code>还可以指向一个本地压缩归档文件，该文件会在复制到容器时会被解压提取，如ADD sxample.tar.xz /。但是若URL中的文件为归档文件则不会被解压提取。</p><p>ADD 和 COPY指令虽然功能相似，但一般推荐使用COPY,因为COPY只支持本地文件，相比ADD而言，它更加透明。</p><h5 id="EXPOSE"><a href="#EXPOSE" class="headerlink" title="EXPOSE"></a>EXPOSE</h5><p>格式: <code>EXPOSE &lt;port&gt; [&lt;port&gt;/&lt;protocol&gt;...]</code></p><p>EXPOSE指令通知Docker该容器在运行时侦听指定的网络端口。可以指定端口是侦听TCP还是UDP，如果未指定协议，则默认值为TCP。<br>这个指令仅仅是声明容器打算使用什么端口而已，并不会自动在宿主机进行端口映射,可以在运行的时候通过docker -p指定。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">EXPOSE 80/tcp</span><br><span class="line">EXPOSE 80/udp</span><br></pre></td></tr></table></figure><h5 id="USER"><a href="#USER" class="headerlink" title="USER"></a>USER</h5><p>格式: <code>USER &lt;user&gt;[:&lt;group] 或者 USER &lt;UID&gt;[:&lt;GID&gt;]</code></p><p>USER指令设置了user name和user group(可选)。在它之后的RUN,CMD以及ENTRYPOINT指令都会以设置的user来执行。</p><h5 id="WORKER"><a href="#WORKER" class="headerlink" title="WORKER"></a>WORKER</h5><p>格式: <code>WORKDIR /path/to/workdir</code></p><p>WORKDIR指令设置工作目录，它之后的RUN、CMD、ENTRYPOINT、COPY以及ADD指令都会在这个工作目录下运行。如果这个工作目录不存在，则会自动创建一个。<br>WORKDIR指令可在Dockerfile中多次使用。如果提供了相对路径，则它将相对于上一个WORKDIR指令的路径。例如</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">WORKDIR /a</span><br><span class="line">WORKDIR b</span><br><span class="line">WORKDIR c</span><br><span class="line">RUN pwd</span><br></pre></td></tr></table></figure><p>输出结果是 /a/b/c</p><h5 id="RUN"><a href="#RUN" class="headerlink" title="RUN"></a>RUN</h5><p>格式1： <code>RUN &lt;command&gt;</code> (shell格式)<br>格式2： <code>RUN [&quot;executable&quot;, &quot;param1&quot;, &quot;param2&quot;]</code> (exec格式，推荐使用)</p><p>RUN指令会在前一条命令创建出的镜像的基础上创建一个容器，并在容器中运行命令，在命令结束运行后提交容器为新镜像，新镜像被Dockerfile中的下一条指令使用。</p><p>RUN指令的两种格式表示命令在容器中的两种运行方式。当使用shell格式时，命令通过/bin/sh -c运行。<br>当使用exec格式时，命令是直接运行的，容器不调用shell程序，即容器中没有shell程序。<br>exec格式中的参数会被当成JSON数组被Docker解析，故必须使用双引号而不能使用单引号。因为exec格式不会在shell中执行，所以环境变量的参数不会被替换。</p><p>比如执行<code>RUN [&quot;echo&quot;, &quot;$HOME&quot;]</code>指令时，$HOME不会做变量替换。如果希望运行shell程序，指令可以写成 <code>RUN [&quot;/bin/bash&quot;, &quot;-c&quot;, &quot;echo&quot;, &quot;$HOME&quot;]</code>。</p><h4 id="CMD"><a href="#CMD" class="headerlink" title="CMD"></a>CMD</h4><p>CMD指令有3种格式。</p><p>格式1：<code>CMD &lt;command&gt;</code> (shell格式)<br>格式2：<code>CMD [&quot;executable&quot;, &quot;param1&quot;, &quot;param2&quot;]</code> (exec格式，推荐使用)<br>格式3：<code>CMD [&quot;param1&quot;, &quot;param2&quot;]</code> (为ENTRYPOINT指令提供参数)</p><p>CMD指令提供容器运行时的默认值，这些默认值可以是一条指令，也可以是一些参数。一个Dockerfile中可以有多条CMD指令，但只有最后一条CMD指令有效。<br>CMD [“param1”, “param2”]格式是在CMD指令和ENTRYPOINT指令配合时使用的，CMD指令中的参数会添加到ENTRYPOING指令中.使用shell和exec格式时，命令在容器中的运行方式与RUN指令相同。</p><p>不同之处在于，RUN指令在构建镜像时执行命令，并生成新的镜像；CMD指令在构建镜像时并不执行任何命令，而是在容器启动时默认将CMD指令作为第一条执行的命令。如果用户在命令行界面运行docker run命令时指定了命令参数，则会覆盖CMD指令中的命令。</p><h5 id="ENDPOINT"><a href="#ENDPOINT" class="headerlink" title="ENDPOINT"></a>ENDPOINT</h5><p>ENTRYPOINT指令有两种格式。</p><p>格式1：<code>ENTRYPOINT &lt;command&gt;</code> (shell格式)<br>格式2：<code>ENTRYPOINT [&quot;executable&quot;, &quot;param1&quot;, &quot;param2&quot;]</code> (exec格式，推荐格式)</p><p>ENTRYPOINT指令和CMD指令类似，都可以让容器在每次启动时执行相同的命令，但它们之间又有不同。一个Dockerfile中可以有多条ENTRYPOINT指令，但只有最后一条ENTRYPOINT指令有效。</p><p>当使用Shell格式时，ENTRYPOINT指令会忽略任何CMD指令和docker run命令的参数，并且会运行在bin/sh -c中。这意味着ENTRYPOINT指令进程为bin/sh -c的子进程,进程在容器中的PID将不是1，且不能接受Unix信号。即当使用<code>docker stop &lt;container&gt;</code>命令时，命令进程接收不到SIGTERM信号。</p><p>推荐使用exec格式，使用此格式时，docker run传入的命令参数会覆盖CMD指令的内容并且附加到ENTRYPOINT指令的参数中。从ENTRYPOINT的使用中可以看出，CMD可以是参数，也可以是指令，而ENTRYPOINT只能是命令；另外，docker run命令提供的运行命令参数可以覆盖CMD,但不能覆盖ENTRYPOINT。</p><h4 id="Dockerfile实践心得"><a href="#Dockerfile实践心得" class="headerlink" title="Dockerfile实践心得"></a>Dockerfile实践心得</h4><h5 id="使用标签"><a href="#使用标签" class="headerlink" title="使用标签"></a>使用标签</h5><p>给镜像打上标签，有利于帮助了解进镜像功能</p><h5 id="谨慎选择基础镜像"><a href="#谨慎选择基础镜像" class="headerlink" title="谨慎选择基础镜像"></a>谨慎选择基础镜像</h5><p>选择基础镜像时，尽量选择当前官方镜像库的肩宽，不同镜像的大小不同，目前Linux镜像大小由如下关系:</p><blockquote><p>busybox &lt; debian &lt; centos &lt; ubuntu</p></blockquote><p>同时在构建自己的Docker镜像时,只安装和更新必须使用的包。此外相比Ubuntu镜像，更推荐使用Debian镜像，因为它非常轻量级(目前其大小是在100MB以下),并且仍然是一个完整的发布版本。</p><h5 id="充分利用缓存"><a href="#充分利用缓存" class="headerlink" title="充分利用缓存"></a>充分利用缓存</h5><p>Docker daemon会顺序执行Dockerfile中的指令，而且一旦缓存失效，后续命令将不能使用缓存。为了有效地利用缓存，需要保证指令的连续性，尽量将所有Dockerfile文件相同的部分都放在前面，而将不同的部分放到后面。</p><h5 id="正确使用ADD与COPY命令"><a href="#正确使用ADD与COPY命令" class="headerlink" title="正确使用ADD与COPY命令"></a>正确使用ADD与COPY命令</h5><p>当在Dockerfile中的不同部分需要用到不同的文件时，不要一次性地将这些文件都添加到镜像中去，而是在需要时添加，这样也有利于重复利用docker缓存。<br>另外考虑到镜像大小问题，使用ADD指令去获取远程URL中的压缩包不是推荐的做法。应该使用RUN wget或RUN curl代替。这样可以删除解压后不在需要的文件，并且不需要在镜像中在添加一层。</p><p>错误做法:</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ADD</span><span class="bash"> http://example.com/big.tar.xz /usr/src/things/</span></span><br><span class="line"><span class="bash">RUN tar -xJf /usr/src/things/big.tar.xz -C /usr/src/things</span></span><br><span class="line"><span class="bash">RUN make -C /usr/src/things all</span></span><br></pre></td></tr></table></figure><p>正确的做法</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">RUN</span><span class="bash"> mkdir -p /usr/src/things \</span></span><br><span class="line"><span class="bash">    &amp;&amp; curl -SL http://example.com/big.tar.xz \</span></span><br><span class="line"><span class="bash">    | tar -xJC /usr/src/things \</span></span><br><span class="line"><span class="bash">    &amp;&amp; make -C /usr/src/things all</span></span><br></pre></td></tr></table></figure><h5 id="RUN指令"><a href="#RUN指令" class="headerlink" title="RUN指令"></a>RUN指令</h5><p>在使用较长的RUN指令时可以使用反斜杠\分隔多行。大部分使用RUN指令的常见是运行apt-wget命令，在该场景下请注意以下几点。</p><ol><li>不要在一行中单独使用指令RUN apt-get update。当软件源更新后，这样做会引起缓存问题，导致RUN apt-get install指令运行失败。所以,RUN apt-get update和RUN apt-get install应该写在同一行。比如 RUN apt-get update &amp;&amp; apt-get install -y package-1 package-2 package-3</li><li>避免使用指令RUN apt-get upgrade 和 RUN apt-get dist-upgrade。因为在一个无特权的容器中，一些必要的包会更新失败。如果需要更新一个包(如package-1)，直接使用命令RUN apt-get install -y package-1。</li></ol><h5 id="CMD和ENTRYPOINT命令"><a href="#CMD和ENTRYPOINT命令" class="headerlink" title="CMD和ENTRYPOINT命令"></a>CMD和ENTRYPOINT命令</h5><p>CMD和ENTRYPOINT命令指定是了容器运行的默认命令，推荐二者结合使用。使用exec格式的ENTRYPOINT指令设置固定的默认命令和参数，然后使用CMD指令设置可变的参数。</p><p>比如下面这个例子:</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> busybox</span><br><span class="line"><span class="keyword">WORKDIR</span><span class="bash"> /app</span></span><br><span class="line"><span class="bash">COPY run.sh /app</span></span><br><span class="line"><span class="bash">RUN chmod +x run.sh</span></span><br><span class="line"><span class="bash">ENTRYPOINT [<span class="string">"/app/run.sh"</span>]</span></span><br><span class="line"><span class="bash">CMD [<span class="string">"param1"</span>]</span></span><br></pre></td></tr></table></figure><p>run.sh内容如下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/sh</span><br><span class="line">echo &quot;$@&quot;</span><br></pre></td></tr></table></figure><p>运行后输出结果为param1, Dockerfile中CMD和ENTRYPOINT的顺序不重要(CMD写在ENTRYPOINT前后都可以)。</p><p>当在windows系统下build dockerfile你可能会遇到这个问题</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">standard_init_linux.go:207: exec user process caused &quot;no such file or directory&quot;</span><br></pre></td></tr></table></figure><p>这是因为sh文件的fileformat是dos,这里需要修改为unix,不需要下载额外的工具，一般我们机器上安装了git会自带git bash,进入git bash,使用vi 编辑，在命令行模式下修改(:set ff=unix)。</p><h5 id="不要在Dockerfile中做端口映射"><a href="#不要在Dockerfile中做端口映射" class="headerlink" title="不要在Dockerfile中做端口映射"></a>不要在Dockerfile中做端口映射</h5><p>使用Dockerfile的EXPOSE指令，虽然可以将容器端口映射在主机端口上，但会破坏Docker的可移植性，且这样的镜像在一台主机上只能启动一个容器。所以端口映射应在docker run命令中用-p 参数指定</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 不要再Dockerfile中做如下映射</span><br><span class="line">EXPOSE 80:8080</span><br><span class="line"></span><br><span class="line"># 仅暴露80端口,需要另做映射</span><br><span class="line">EXPOSE 80</span><br></pre></td></tr></table></figure><h4 id="实践Dockerfile"><a href="#实践Dockerfile" class="headerlink" title="实践Dockerfile"></a>实践Dockerfile</h4><h5 id="Java服务的Dockerfile"><a href="#Java服务的Dockerfile" class="headerlink" title="Java服务的Dockerfile"></a>Java服务的Dockerfile</h5><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> openjdk:<span class="number">8</span>-jre-alpine</span><br><span class="line"><span class="keyword">ENV</span> spring_profiles_active=dev</span><br><span class="line"><span class="keyword">ENV</span> env_java_debug_enabled=false</span><br><span class="line"><span class="keyword">EXPOSE</span> <span class="number">8080</span></span><br><span class="line"><span class="keyword">WORKDIR</span><span class="bash"> /app</span></span><br><span class="line"><span class="bash">ADD target/smcp-web.jar /app/target/smcp-web.jar</span></span><br><span class="line"><span class="bash">ADD run.sh /app</span></span><br><span class="line"><span class="bash">ENTRYPOINT ./run.sh</span></span><br></pre></td></tr></table></figure><p>可以看到基础镜像是openjdk,然后设置了两个环境变量,服务访问端口是9090(意味着springboot应用中指定了server.port=8080),设置了工作目录是/app。通过ENTRYPOINT设定了启动镜像时要启动的命令(./run.sh)。这个脚本中的内容如下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/sh</span><br><span class="line"># Set debug options if required</span><br><span class="line">if [ x&quot;$&#123;env_java_debug_enabled&#125;&quot; != x ] &amp;&amp; [ &quot;$&#123;env_java_debug_enabled&#125;&quot; != &quot;false&quot; ]; then</span><br><span class="line">    java_debug_args=&quot;-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005&quot;</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"># ex: env_jvm_flags=&quot;-Xmx1200m -XX:MaxRAM=1500m&quot; for production</span><br><span class="line">java $java_debug_args $env_jvm_flags -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -jar target/smcp-web.jar</span><br></pre></td></tr></table></figure><p>如果我们要指定jvm的一些参数,可以通过在环境变量中设置env_jvm_flags来指定。</p><h5 id="Maven-Dockerfile"><a href="#Maven-Dockerfile" class="headerlink" title="Maven Dockerfile"></a>Maven Dockerfile</h5><p>maven的Dockerfile也写的很好，这里我发上来也给大家参考下</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> openjdk:<span class="number">8</span>-jdk</span><br><span class="line"></span><br><span class="line"><span class="keyword">ARG</span> MAVEN_VERSION=<span class="number">3.6</span>.<span class="number">3</span></span><br><span class="line"><span class="keyword">ARG</span> USER_HOME_DIR=<span class="string">"/root"</span></span><br><span class="line"><span class="keyword">ARG</span> SHA=c35a1803a6e70a126e80b2b3ae33eed961f83ed74d18fcd16909b2d44d7dada3203f1ffe726c17ef8dcca2dcaa9fca676987befeadc9b9f759967a8cb77181c0</span><br><span class="line"><span class="keyword">ARG</span> BASE_URL=https://apache.osuosl.org/maven/maven-<span class="number">3</span>/$&#123;MAVEN_VERSION&#125;/binaries</span><br><span class="line"></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> mkdir -p /usr/share/maven /usr/share/maven/ref \</span></span><br><span class="line"><span class="bash">  &amp;&amp; curl -fsSL -o /tmp/apache-maven.tar.gz <span class="variable">$&#123;BASE_URL&#125;</span>/apache-maven-<span class="variable">$&#123;MAVEN_VERSION&#125;</span>-bin.tar.gz \</span></span><br><span class="line"><span class="bash">  &amp;&amp; <span class="built_in">echo</span> <span class="string">"<span class="variable">$&#123;SHA&#125;</span>  /tmp/apache-maven.tar.gz"</span> | sha512sum -c - \</span></span><br><span class="line"><span class="bash">  &amp;&amp; tar -xzf /tmp/apache-maven.tar.gz -C /usr/share/maven --strip-components=1 \</span></span><br><span class="line"><span class="bash">  &amp;&amp; rm -f /tmp/apache-maven.tar.gz \</span></span><br><span class="line"><span class="bash">  &amp;&amp; ln -s /usr/share/maven/bin/mvn /usr/bin/mvn</span></span><br><span class="line"><span class="bash"></span></span><br><span class="line"><span class="bash">ENV MAVEN_HOME /usr/share/maven</span></span><br><span class="line"><span class="bash">ENV MAVEN_CONFIG <span class="string">"<span class="variable">$USER_HOME_DIR</span>/.m2"</span></span></span><br><span class="line"><span class="bash"></span></span><br><span class="line"><span class="bash">COPY mvn-entrypoint.sh /usr/<span class="built_in">local</span>/bin/mvn-entrypoint.sh</span></span><br><span class="line"><span class="bash">COPY settings-docker.xml /usr/share/maven/ref/</span></span><br><span class="line"><span class="bash"></span></span><br><span class="line"><span class="bash">ENTRYPOINT [<span class="string">"/usr/local/bin/mvn-entrypoint.sh"</span>]</span></span><br><span class="line"><span class="bash">CMD [<span class="string">"mvn"</span>]</span></span><br></pre></td></tr></table></figure><p>可以看到它是基于openjdk这个基础镜像来创建的，先去下载maven的包，然后进行了安装。 然后又设置了MAVEN_HOME和MAVEN_CONFIG这两个环境变量，最后通过mvn-entrypoing.sh来进行了启动。</p><h5 id="前端服务的两阶段构建"><a href="#前端服务的两阶段构建" class="headerlink" title="前端服务的两阶段构建"></a>前端服务的两阶段构建</h5><p>我有一个前端服务，目录结构如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ ls frontend/</span><br><span class="line">myaccount/  resources/  third_party/</span><br></pre></td></tr></table></figure><p>myaccount目录下是放置的js,vue等，resources放置的是css,images等。third_party放的是第三方应用。</p><p>这里采用了两阶段构建，即采用上一阶段的构建结果作为下一阶段的构建数据</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> node:alpine as builder</span><br><span class="line"><span class="keyword">WORKDIR</span><span class="bash"> <span class="string">'/build'</span></span></span><br><span class="line"><span class="bash">COPY myaccount ./myaccount</span></span><br><span class="line"><span class="bash">COPY resources ./resources</span></span><br><span class="line"><span class="bash">COPY third_party ./third_party</span></span><br><span class="line"><span class="bash"></span></span><br><span class="line"><span class="bash">WORKDIR <span class="string">'/build/myaccount'</span></span></span><br><span class="line"><span class="bash"></span></span><br><span class="line"><span class="bash">RUN npm install</span></span><br><span class="line"><span class="bash">RUN npm rebuild node-sass</span></span><br><span class="line"><span class="bash">RUN npm run build</span></span><br><span class="line"><span class="bash"></span></span><br><span class="line"><span class="bash">RUN ls /build/myaccount/dist</span></span><br><span class="line"><span class="bash"></span></span><br><span class="line"><span class="bash">FROM nginx</span></span><br><span class="line"><span class="bash">EXPOSE 80</span></span><br><span class="line"><span class="bash">COPY --from=builder /build/myaccount/dist /usr/share/nginx/html</span></span><br></pre></td></tr></table></figure><p>需要注意结尾的 <code>--from=builder</code>这里和开头是遥相呼应的。</p>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note info&quot;&gt;&lt;p&gt;一段时间未写 Dockerfile , 有些忘记编写规则 , 于是转发一篇详解文章 , 以做记录&lt;/p&gt;
&lt;p&gt;本文转自 &lt;a href=&quot;https://segmentfault.com/a/1190000038194699?hmsr=toutiao.io&amp;amp;utm=&amp;amp;utm_medium=toutiao.io&amp;amp;utm_source=toutiao.io&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;看完这篇,再也不用担心不会写dockerfile了&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="Docker" scheme="https://lhalcyon.com/categories/Docker/"/>
    
    
      <category term="Dockerfile" scheme="https://lhalcyon.com/tags/Dockerfile/"/>
    
  </entry>
  
  <entry>
    <title>转-正则</title>
    <link href="https://lhalcyon.com/regex/"/>
    <id>https://lhalcyon.com/regex/</id>
    <published>2020-09-20T08:02:11.000Z</published>
    <updated>2021-03-25T15:23:14.336Z</updated>
    
    <content type="html"><![CDATA[<div class="note info"><p>在研发中 , 经常用到正则表达式 , 看过很多次 , 在用时却记不住 , 这里转篇结合例子讲解的文章以记录.</p><p>转自 <a href="https://juejin.cn/post/6844903648309297166" target="_blank" rel="noopener">掘金</a></p></div><a id="more"></a><h2 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h2><h3 id="1-1-基本语法"><a href="#1-1-基本语法" class="headerlink" title="1.1 基本语法"></a>1.1 基本语法</h3><p>通过一张图表来对正则表达式的基本进行一个回顾</p><table><thead><tr><th><strong>single char</strong></th><th><strong>quantifiers(数量)</strong></th><th><strong>position(位置)</strong></th></tr></thead><tbody><tr><td>\d 匹配数字</td><td>* 0个或者更多</td><td>^一行的开头</td></tr><tr><td>\w 匹配word(数字、字母)</td><td>+ 1个或更多，至少1个</td><td>$一行的结尾</td></tr><tr><td>\W 匹配<strong>非</strong>word(数字、字母)</td><td>? 0个或1个,一个Optional</td><td>\b 单词”结界”(word bounds)</td></tr><tr><td>\s 匹配white space(包括空格、tab等)</td><td>{min,max}出现次数在一个范围内</td><td></td></tr><tr><td>\S 匹配<strong>非</strong>white space(包括空格、tab等)</td><td>{n}匹配出现n次的</td><td></td></tr><tr><td>. 匹配任何，任何的字符</td><td></td></tr></tbody></table><h4 id="1-1-1-single-char"><a href="#1-1-1-single-char" class="headerlink" title="1.1.1 single char"></a>1.1.1 single char</h4><p>假设你有一段字符如下:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">These are some phone numbers 917-555-1234. Also, you can call me at 645.555.1234 and of course I&apos;m always reachable at (212)867-5309.</span><br></pre></td></tr></table></figure><ul><li><code>\w</code></li></ul><p>将匹配所有word，当然，() - 等字符除外</p><ul><li><code>\w\w\w</code></li></ul><p>注意正则表达式是匹配一个连续串的规则，所以可以看到三个字母的单词可以匹配到，6个单词的也可以匹配到。</p><ul><li><code>\s\s</code></li></ul><p>匹配到一行中连续两个空格</p><h4 id="quantifiers"><a href="#quantifiers" class="headerlink" title="quantifiers"></a>quantifiers</h4><p>假设我们有一段话:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">The colors of the rainbow have many colours </span><br><span class="line">and the rainbow does not  have a single colour.</span><br></pre></td></tr></table></figure><p>我们想把所有的颜色找出来<code>colors</code> <code>colours</code> <code>colour</code></p><p><strong>答案</strong> <code>colou?rs?</code> 嗯，看起来很简单，很方便。</p><hr><p>好了，现在想要匹配一行中的4个数字，或者一行中的5个字母等，这时候用quantifiers就非常方便了。</p><blockquote><p>我现在想找5个字母组成的单词</p></blockquote><ul><li><code>\w{5}</code> 这样可以吗？嗯..不行的，看下它匹配的内容,如下: ‘<code>These</code> are some <code>phone</code> <code>numbe</code>rs 915-555-1234…’ 的确，我们模板给的很简单，它只找一行中，连续出现5个字母的序列。所以现在改进一下好了</li><li><code>\w{5}\s</code> 为了能找到单词，所以我希望5个字母后，跟一个空格的序列，这样应该可以了吧，看下匹配情况： ‘<code>These</code>are some <code>phone</code>nu<code>mbers</code>915-555-1234…’ 嗯，是的，只有目前这些方法，是做不到的。 所以，我们需要第三个工具  “position”</li></ul><h4 id="1-1-2-position"><a href="#1-1-2-position" class="headerlink" title="1.1.2 position"></a>1.1.2 position</h4><p>回到刚才的问题之前，先熟悉下<code>^</code> <code>$</code> 和 <code>\b</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">This is somthing</span><br><span class="line">is about</span><br><span class="line">a blah</span><br><span class="line">words</span><br><span class="line">sequence of words</span><br><span class="line">Hello and</span><br><span class="line">GoodBye and </span><br><span class="line">Go gogo!</span><br></pre></td></tr></table></figure><p>来看下各种正则所匹配的内容</p><ul><li><code>\w+</code> 这个应该毫无疑问，匹配所有的words</li><li><code>^\w+</code> 多了一个 <code>^</code> ,这样子,就只能匹配到每一行开头的单词了 </li><li><code>\w+$</code> 这样就能匹配到每行的最后一个字母了</li></ul><p>回到刚才的问题</p><blockquote><p>现在想找5个字母组成的单词</p></blockquote><p>就变得很简单了，使用单词结界符<code>\b</code></p><p>答案就是<code>\b\w{5}\b</code></p><h4 id="1-1-3-找个电话号码"><a href="#1-1-3-找个电话号码" class="headerlink" title="1.1.3 找个电话号码"></a>1.1.3 找个电话号码</h4><p>最后，找一个刚才出现的电话号<code>123-456-1231</code></p><p>用以上最基本的正则方法就是 <code>\d{3}-\d{3}-\d{4}</code>，这样就找到了。 但是有的时候，电话号码是<code>123.456.1234</code> 或者 <code>(212)867-4233</code>的结构怎么办呢？</p><p>正则表达式中的<code>或</code>或者其他表达方式，下面一一来介绍。</p><h3 id="1-2-字符分类-char-class"><a href="#1-2-字符分类-char-class" class="headerlink" title="1.2 字符分类(char class)"></a>1.2 字符分类(char class)</h3><p>前面记录了最基本的方法 , 接下来说一下分类符 <code>[]</code></p><p>这个符号用来表示逻辑关系<code>或</code>，比如<code>[abc]</code>表示a或者b或c.<code>[-.]</code>表示符号<code>-</code>或者<code>.</code>号(<strong>注意这里，在<code>[]</code>中的<code>.</code>号代表的就是这个符号，但是如果在其外面，表示个匹配所有。 所以如果不在<code>[]</code>之中，想要匹配’.’，就要通过转意符号<code>\.</code></strong>)</p><h4 id="1-2-1-分类的简单应用"><a href="#1-2-1-分类的简单应用" class="headerlink" title="1.2.1 分类的简单应用"></a>1.2.1 分类的简单应用</h4><p>字符序列:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">The lynk is quite a link don&apos;t you think? l nk l(nk</span><br></pre></td></tr></table></figure><p>正则表达式： <code>l[yi (]nk</code></p><p>结果:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lynk  link  l nk   l(nk</span><br></pre></td></tr></table></figure><p>很容易理解的，就是表达<code>或</code>逻辑。</p><h4 id="1-2-2-匹配所有可能的电话号码"><a href="#1-2-2-匹配所有可能的电话号码" class="headerlink" title="1.2.2 匹配所有可能的电话号码"></a>1.2.2 匹配所有可能的电话号码</h4><p>好了，现在回到之前遗留的问题，有以下字段，请匹配所有可能的电话号码：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">These are some phone numbers 915-134-3122. Also,</span><br><span class="line">you can call me at 643.123.1333 and of course,</span><br><span class="line">I&apos;m always reachable at (212)867-5509</span><br></pre></td></tr></table></figure><p>好的，一步一步来，刚才我们使用<code>\d{3}-\d{3}-\d{4}</code>匹配了连字符的情况。现在我们可以很轻松的把<code>.</code>这种情况加进去了</p><p>第一步： <code>\d{3}[-.]\d{3}[-.]\d{4}</code></p><p>第二步: 为了能够匹配括号，可以使用?来，因为这是一个option选择。所以最后就成了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\(?\d&#123;3&#125;[-.)]\d&#123;3&#125;[-.]\d&#123;4&#125;</span><br></pre></td></tr></table></figure><p><strong>这里还是要说明，在[]中，特殊字符不需要转义，可以直接使用，比如<code>[.()]</code>,但是在外面，是需要转义的<code>\(</code> <code>\.</code>等</strong></p><h4 id="1-2-3-的特殊语法"><a href="#1-2-3-的特殊语法" class="headerlink" title="1.2.3 []的特殊语法"></a>1.2.3 []的特殊语法</h4><p>刚才介绍了最简单和基本的功能，但是有些特殊的地方需要注意</p><p><strong>1</strong>. -连接符是第一个字符时</p><p>比如<code>[-.]</code>的含义是连字符<code>-</code>或者点符<code>.</code>。 但是，如果当连字符不是第一个字符时，比如<code>[a-z]</code>，这就表示是从字母a到字符z。</p><p><strong>2.</strong> []中的^</p><p><code>^</code>在之前介绍中，是表示一行开头，但是在<code>[]</code>中，有着不同的含义。 <code>[ab]</code> 表示a或者b <code>[^ab]</code> 啥都行，只要不是a或b(anythings except a and b)，相当于取反</p><h4 id="1-2-4-和"><a href="#1-2-4-和" class="headerlink" title="1.2.4 []和()"></a>1.2.4 []和()</h4><p>除了使用<code>[]</code>表示或逻辑,<code>()</code>也是可以的。用法是<code>(a|b)</code>表示a或者b</p><p>比如下面的例子，匹配所有email</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">gaoyaqi411@126.com  </span><br><span class="line">dyumc@google.net </span><br><span class="line">sam@sjtu.edu</span><br></pre></td></tr></table></figure><p>思路：</p><p>首先要想我到底相匹配什么，这里我想匹配的是</p><ol><li>任何一个以words开头的，一个或更多 <code>\w+</code></li><li>紧接着是一个<code>@</code>符号 <code>\w+@</code></li><li>接着有一个或者更多的words <code>\w+@\w+</code></li><li>接着一个<code>.</code>标点 <code>\w+@\w+\.</code></li><li>接着一个<code>com</code> <code>net</code> 或 <code>edu</code> <code>\w+@\w+\.(com|net|edu)</code></li></ol><p><strong>还是提醒注意第四步的<code>\.</code>转义符号</strong></p><p>好了，这样几可以匹配以上的所有邮箱了。但是还有一个问题，因为邮箱用户名是可以有<code>.</code>的，比如<code>vincent.ko@126.com</code></p><p>其实仍然很简单，修复如下： <code>[\w.]+@\w+\.(com|net|edu)</code></p><h4 id="1-2-5-总结"><a href="#1-2-5-总结" class="headerlink" title="1.2.5 总结"></a>1.2.5 总结</h4><ol><li><p><code>[]</code>的作用，用英文表达就是”alternation”,表达一个或的逻辑；</p></li><li><p><code>/[-.(]/</code> 在符号中的连字符<code>-</code>放在第一位表示连字符本身，如果放在中间，表示”从..到..”，比如<code>[a-z]</code>表示a-z</p></li><li><p><code>[.)]</code> 括号中的特殊符号不需要转义，就表示其本身</p></li><li><p>[^ab]<code>括号中的</code>^<code>表示非，anythings except</code>a<code>and</code>b</p></li><li><p><code>(a|b)</code>也可表示选择，但是它有更强大的功能….</p></li></ol><p>所以，<code>()</code>的强大功能是什么呢？ 分组捕获，这对序列的替换、交换是很有帮助的。 后面一节进行学习记录</p><h3 id="1-3-分组捕获-capturing-groups"><a href="#1-3-分组捕获-capturing-groups" class="headerlink" title="1.3 分组捕获(capturing groups)"></a>1.3 分组捕获(capturing groups)</h3><p>什么是分组捕获，现在回到之前电话号码的例子</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">212-555-1234</span><br><span class="line">915-412-1333</span><br><span class="line"></span><br><span class="line">//我想要保留区号，把后面的电话号码变为通用性的</span><br><span class="line">👇👇👇👇👇👇👇👇👇👇👇👇</span><br><span class="line"></span><br><span class="line">212-xxx-xxxx</span><br><span class="line">915-xxx-xxxx</span><br></pre></td></tr></table></figure><p>按照之前的做法<code>\d{3}-\d{3}-\d{4}</code>,这种匹配的方式，是将整个电话号码作为一个组(group)匹配起来。 我们把<code>212-555-1234</code>这样的叫<code>Group0</code>。</p><p>这个时候，如果我们加了一个括号<code>\d{3}-(\d{3})-\d{4}</code>，那么匹配到的<code>555</code>就叫<code>Group1</code>。 以此类推，如果有两个小括号<code>\d{3}-(\d{3})-(\d{4})</code>那么分组就是下面的情况：</p><h4 id="1-3-1-选择分组"><a href="#1-3-1-选择分组" class="headerlink" title="1.3.1 选择分组"></a>1.3.1 选择分组</h4><p>现在组已经分好，那么如何选择已经匹配的分组？</p><p>这里有两种方法，第一种使用<code>$</code>符号，比如<code>$1</code> 代表<code>555</code>,<code>$2</code>代表<code>1234</code>；第二种，使用<code>\</code>,比如<code>\1</code>代表<code>555</code>。两种的使用场景不一样，先讲<code>$</code></p><p>现在为了满足最开始的要求，我们可以这么做</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">reg: \(?(\d&#123;3&#125;)[-.)]\d&#123;3&#125;[-.]\d&#123;4&#125;</span><br><span class="line"></span><br><span class="line">replace: $1-xxx-xxxx</span><br></pre></td></tr></table></figure><h4 id="1-3-2-实景训练"><a href="#1-3-2-实景训练" class="headerlink" title="1.3.2 实景训练"></a>1.3.2 实景训练</h4><p><strong>1.</strong> 现在有一个名单列表 , 但是姓和名是反过来的, 需要调正</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">shiffina, Daniel</span><br><span class="line">shifafl, Daniell</span><br><span class="line">shquer, Danny</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>实现方法:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">reg: (\w+),\s(\w+)</span><br><span class="line"></span><br><span class="line">replace: $2 $1</span><br></pre></td></tr></table></figure><p>注意：<code>$0</code> 是所有匹配到的，所以第一个加括号的是<code>$1</code></p><p><strong>2.</strong> 匹配markdown中的link标签，并替换为html标签</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[google](http://google.com)</span><br><span class="line">[itp](http://itp.nyu.edu)</span><br><span class="line">[Coding Rainbow](http://codingrainbow.com)</span><br></pre></td></tr></table></figure><p>解析： 这道题有些坑，需要慢慢来。</p><p>看到这个，第一个想考虑匹配<code>[google]</code>这个东西，立马想到正则表达式<code>\[.*\]</code>。 这个是巨大的坑，在当前来看，它的确能正确匹配到上面的三条。 但是如果文本是这样的：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[google](http://google.com),[test]</span><br><span class="line">[itp](http://itp.nyu.edu)</span><br><span class="line">[Coding Rainbow](http://codingrainbow.com)</span><br></pre></td></tr></table></figure><p>看到了，第一行的内容会全部匹配下来，而不能区分<code>[google]</code>和<code>[test]</code>。 之所以这样，<strong>是因为<code>.</code>是贪婪的，他表示所有，所有能匹配到的，所以当然也包括了<code>]</code>，一直到这一行的最后一个<code>]</code>，它才停止。</strong></p><p>所以为了让它能正确匹配，需要去掉这种贪婪的属性。这里用到<code>？</code> 。 当<code>?</code>放在了<code>quantifiers</code>符号后，表示去掉贪婪属性，匹配到终止条件，即可停下。</p><p><code>\[.*?\]</code>这样子，就可以将<code>[google]</code>和<code>[test]</code>分开</p><p>接下来完成所有内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">reg: \[(.*?)\]\((http.*?)\)</span><br><span class="line"></span><br><span class="line">replace: &lt;a href=&quot;$2&quot;&gt;$1&lt;/a&gt;</span><br></pre></td></tr></table></figure><h4 id="1-3-3-使用-选择器"><a href="#1-3-3-使用-选择器" class="headerlink" title="1.3.3 使用 \ 选择器"></a>1.3.3 使用 <code>\</code> 选择器</h4><p><code>$</code>选择符是在替换的时候进行的标志或选择，但是如果在正则表达式本身，就要使用<code>\</code>选择了。比如以下的场景</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">This is is a a dog , I think think this is is really</span><br><span class="line">a a good good dog. Don&apos;t you you thinks so so ?</span><br></pre></td></tr></table></figure><p>我们想要匹配比如<code>is is</code> <code>so so</code>这样连续的序列，就用到了下面的表达方式: <code>(\w+)\s\1</code></p><p><img src="https://lhalcyon-1258836598.cos.ap-shenzhen-fsi.myqcloud.com/blog/164e60dc2e523db9.png" alt=""></p><p>嗯，差不多达到效果，但是有一些小的bug。比如第一句话<code>This is is a</code> 这个就匹配不准确，会把第一个This的后面字母匹配进去。 <strong>这就用到第一节说的字符结界 <code>\b</code>了</strong>，就变成了<code>\b(\w+)\s\1\b</code></p><p>好了，大功告成，就不贴效果图了，自行脑补就好了。</p><h4 id="1-3-4-总结"><a href="#1-3-4-总结" class="headerlink" title="1.3.4 总结"></a>1.3.4 总结</h4><ol><li>分组捕获，使用()进行数据分组，编号0代表整个匹配项，选择的分组从1号开始</li><li>选择器可以使用<code>$1</code>和<code>\1</code>，但是使用场景不同，<code>\</code>用在正则表达式自己身上</li><li><code>?</code>符号可以禁止贪婪属性，放在<code>.*</code>之后，表示一次匹配遇到重点就可以停止。否则将会一直向后匹配。</li></ol><h3 id="1-4-在JavaScript中的应用"><a href="#1-4-在JavaScript中的应用" class="headerlink" title="1.4 在JavaScript中的应用"></a>1.4 在JavaScript中的应用</h3><p>这里就不贴了, 若需要查看 ,请参考 <a href="https://juejin.cn/post/6844903648309297166#heading-17" target="_blank" rel="noopener">作者文章</a></p>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note info&quot;&gt;&lt;p&gt;在研发中 , 经常用到正则表达式 , 看过很多次 , 在用时却记不住 , 这里转篇结合例子讲解的文章以记录.&lt;/p&gt;
&lt;p&gt;转自 &lt;a href=&quot;https://juejin.cn/post/6844903648309297166&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;掘金&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="regex" scheme="https://lhalcyon.com/categories/regex/"/>
    
    
      <category term="regex" scheme="https://lhalcyon.com/tags/regex/"/>
    
  </entry>
  
  <entry>
    <title>Nginx之proxy_pass详解</title>
    <link href="https://lhalcyon.com/nginx-proxy_pass/"/>
    <id>https://lhalcyon.com/nginx-proxy_pass/</id>
    <published>2020-08-20T08:02:11.000Z</published>
    <updated>2021-03-22T12:21:06.155Z</updated>
    
    <content type="html"><![CDATA[<div class="note info"><p>记录下 Nginx proxy_pass 常用规则  , 以免遗忘</p></div><p>在 Nginx 中配置 proxy_pass 代理转发时 , 如果在 proxy_pass 后面的 url 加 <code>/</code>  ,表示绝对路径 ; 如果没有 <code>/</code> , 表示相对路径 , 把匹配的路径部分也会代理走</p><h4 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h4><p>假设以下四种情况分别用 <code>http://192.168.1.1/proxy/test.html</code> 进行访问</p><h5 id="1"><a href="#1" class="headerlink" title="1"></a>1</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">location /proxy/ &#123;</span><br><span class="line">proxy_pass http://127.0.0.1/;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>代理到 URL: <code>http://127.0.0.1/test.html</code></p><h5 id="2"><a href="#2" class="headerlink" title="2"></a>2</h5><p>相对第一种 , 尾部少个 <code>/</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">location /proxy/ &#123;</span><br><span class="line">proxy_pass http://127.0.0.1;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>代理到 URL: <code>http://127.0.0.1/proxy/test.html</code></p><h5 id="3"><a href="#3" class="headerlink" title="3"></a>3</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">location /proxy/ &#123;</span><br><span class="line">proxy_pass http://127.0.0.1/aaa/;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>代理到 URL: <code>http://127.0.0.1/aaa/test.html</code></p><h5 id="4"><a href="#4" class="headerlink" title="4"></a>4</h5><p>相对第三种 , 末尾少个 <code>/</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">location /proxy/ &#123;</span><br><span class="line">proxy_pass http://127.0.0.1/aaa;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>代理到 URL: <code>http://127.0.0.1/aaatest.html</code></p><h4 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h4><p><a href="https://www.jianshu.com/p/b010c9302cd0" target="_blank" rel="noopener">简书</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;div class=&quot;note info&quot;&gt;&lt;p&gt;记录下 Nginx proxy_pass 常用规则  , 以免遗忘&lt;/p&gt;&lt;/div&gt;
&lt;p&gt;在 Nginx 中配置 proxy_pass 代理转发时 , 如果在 proxy_pass 后面的 url 加 &lt;code&gt;/&lt;/co
      
    
    </summary>
    
      <category term="Nginx" scheme="https://lhalcyon.com/categories/Nginx/"/>
    
    
      <category term="Nginx" scheme="https://lhalcyon.com/tags/Nginx/"/>
    
  </entry>
  
  <entry>
    <title>App中的羊角符</title>
    <link href="https://lhalcyon.com/cny-symbol-issue/"/>
    <id>https://lhalcyon.com/cny-symbol-issue/</id>
    <published>2020-07-12T08:02:11.000Z</published>
    <updated>2021-03-25T15:23:14.335Z</updated>
    
    <content type="html"><![CDATA[<div class="note info"><p>人民币羊角符是 App 开发中常使用的符号 . 在使用中却偶发觉符号显示不正常 , 在此做记录</p></div><h4 id="两种羊角符"><a href="#两种羊角符" class="headerlink" title="两种羊角符"></a>两种羊角符</h4><h5 id="人民币羊角符"><a href="#人民币羊角符" class="headerlink" title="人民币羊角符"></a>人民币羊角符</h5><blockquote><p>人民币符号为：¥。书写顺序为：先写大写字母“Y”，再在竖划上加上二横，即为“¥”，读音为：yuán（音：元）</p></blockquote><h5 id="日元羊角符"><a href="#日元羊角符" class="headerlink" title="日元羊角符"></a>日元羊角符</h5><blockquote><p>日圆（円），又称作日元，其纸币称为日本银行券，是日本的官方货币，于1871年制定。日圆也经常在美元和欧元之后被当作储备货币。货币符号“¥”，国际标准化组织ISO4217订定其标准代号为JPY。日语罗马字写作Yen。</p></blockquote><p>从定义上看 , 两种羊角符长得一样 , 手写是没有区别的 . 但是在计算机上是有区别的 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">￥¥</span><br></pre></td></tr></table></figure><blockquote><p>若看不出区别 , 可以复制到浏览器中再看看</p></blockquote><p>二者在 UTF-8 表中的区别</p><p><img src="https://lhalcyon-1258836598.cos.ap-shenzhen-fsi.myqcloud.com/blog/a.png" alt=""></p><p><img src="https://lhalcyon-1258836598.cos.ap-shenzhen-fsi.myqcloud.com/blog/b.png" alt=""></p><p>前者是全角元 , 后者是半角元 . 二者在不同的机型上表现不一致 , <strong>全角元在某些机型上只显示一横 , 而半角元都是两横</strong> , 因此实际开发中应该使用半角元</p><h4 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h4><p><a href="https://blog.csdn.net/haizishiwo/article/details/51045642" target="_blank" rel="noopener">CSDN: Android中的羊角符</a></p><p><a href="https://blog.csdn.net/zhaizu/article/details/78562129" target="_blank" rel="noopener">CSDN: 如何解决羊角符只显示一横的问题</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;div class=&quot;note info&quot;&gt;&lt;p&gt;人民币羊角符是 App 开发中常使用的符号 . 在使用中却偶发觉符号显示不正常 , 在此做记录&lt;/p&gt;&lt;/div&gt;
&lt;h4 id=&quot;两种羊角符&quot;&gt;&lt;a href=&quot;#两种羊角符&quot; class=&quot;headerlink&quot; title
      
    
    </summary>
    
      <category term="Android" scheme="https://lhalcyon.com/categories/Android/"/>
    
    
      <category term="App" scheme="https://lhalcyon.com/tags/App/"/>
    
  </entry>
  
  <entry>
    <title>转-win10系统端口占用查看</title>
    <link href="https://lhalcyon.com/win10-port-issue/"/>
    <id>https://lhalcyon.com/win10-port-issue/</id>
    <published>2020-06-19T08:02:11.000Z</published>
    <updated>2021-03-25T15:23:14.335Z</updated>
    
    <content type="html"><![CDATA[<div class="note info"><p>最近win10电脑重启后总是有进程占用端口 , 使得科学上网软件自启时报错 , 这里记录下解决过程</p></div><ol><li>管理员打开 <code>cmd</code></li><li>输入<code>netstat -aon|findstr 8080</code>命令 , 其中8080是被占用的端口号 , 在显示的信息中找到占用端口的进程号PID</li><li>输入<code>tasklist|findstr 2524</code>  其中2524是第二步中找出的进程号</li><li>打开任务管理器 , 找到对应进程的应用,结束掉进程即可</li></ol><h4 id="原文链接"><a href="#原文链接" class="headerlink" title="原文链接"></a>原文链接</h4><p><a href="https://jingyan.baidu.com/article/22fe7cedf2c1c93002617f9c.html" target="_blank" rel="noopener">度娘</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;div class=&quot;note info&quot;&gt;&lt;p&gt;最近win10电脑重启后总是有进程占用端口 , 使得科学上网软件自启时报错 , 这里记录下解决过程&lt;/p&gt;&lt;/div&gt;
&lt;ol&gt;
&lt;li&gt;管理员打开 &lt;code&gt;cmd&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;输入&lt;code&gt;netst
      
    
    </summary>
    
      <category term="Issue" scheme="https://lhalcyon.com/categories/Issue/"/>
    
    
      <category term="Windows" scheme="https://lhalcyon.com/tags/Windows/"/>
    
  </entry>
  
  <entry>
    <title>Flutter研发报错归整</title>
    <link href="https://lhalcyon.com/flutter-issue/"/>
    <id>https://lhalcyon.com/flutter-issue/</id>
    <published>2020-05-23T08:02:11.000Z</published>
    <updated>2021-03-25T15:23:14.334Z</updated>
    
    <content type="html"><![CDATA[<div class="note info"><p>记录一些 Flutter 研发中遇到错误及处理.</p></div><a id="more"></a><h4 id="1-Unexpected-end-of-file-from-server"><a href="#1-Unexpected-end-of-file-from-server" class="headerlink" title="1. Unexpected end of file from server"></a>1. Unexpected end of file from server</h4><p>在新环境安装好 Flutter 环境后 , 运行项目报错</p><p><code>Exception in thread &quot;main&quot; java.net.SocketException: Unexpected end of file from server</code></p><p><img src="https://lhalcyon-1258836598.cos.ap-shenzhen-fsi.myqcloud.com/blog/1413364-d0256e8e7c4af403.webp" alt=""></p><p>搜索后发现是因为 gradle 设置了代理 . 前往 <code>C:/Users/&lt;username&gt;/.gradle/gradle.properties</code> ) (不是项目下的gradle.properties) , 删除多余的代理设置</p><blockquote><p><del>systemProp.https.proxyPort=1080</del></p><p>…</p></blockquote><h5 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h5><p><a href="https://www.jianshu.com/p/5aa8c2fbd3d1" target="_blank" rel="noopener">简书: 解决Flutter报错 Unexpected…</a></p><h4 id="2-Waiting-for-another-flutter-command-to-release-the-startup-lock…"><a href="#2-Waiting-for-another-flutter-command-to-release-the-startup-lock…" class="headerlink" title="2. Waiting for another flutter command to release the startup lock…"></a>2. Waiting for another flutter command to release the startup lock…</h4><p>在安装依赖时 , 偶尔出现 <code>Waiting for another flutter command to release the startup lock...</code> , 通常是上一个命令还未执行完毕 , 但是因为墙的原因可能继续等待也未必成功 .</p><p>想要终止等待状态 , 需要前往 <code>flutter</code> 安装目录下删除 <code>bin/cache/lockfile</code> 文件即可 . 若显示该文件被使用中无法删除 , 则先杀死 dart 进程再删除即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">// Linux</span><br><span class="line">killall -9 dart</span><br><span class="line"></span><br><span class="line">// Windows</span><br><span class="line">taskkill /F /IM dart.exe</span><br></pre></td></tr></table></figure><h4 id="参考链接-1"><a href="#参考链接-1" class="headerlink" title="参考链接"></a>参考链接</h4><p><a href="https://zhuanlan.zhihu.com/p/113223263" target="_blank" rel="noopener">知乎</a></p>]]></content>
    
    <summary type="html">
    
      &lt;div class=&quot;note info&quot;&gt;&lt;p&gt;记录一些 Flutter 研发中遇到错误及处理.&lt;/p&gt;&lt;/div&gt;
    
    </summary>
    
      <category term="Flutter" scheme="https://lhalcyon.com/categories/Flutter/"/>
    
    
      <category term="Flutter" scheme="https://lhalcyon.com/tags/Flutter/"/>
    
  </entry>
  
  <entry>
    <title>ElementUI组件修改样式覆盖无效</title>
    <link href="https://lhalcyon.com/element-ui-style-issue/"/>
    <id>https://lhalcyon.com/element-ui-style-issue/</id>
    <published>2020-04-06T16:00:00.000Z</published>
    <updated>2021-03-22T12:21:06.152Z</updated>
    
    <content type="html"><![CDATA[<div class="note info"><p>在使用ElementUI组件库开发时往往会需要对组件进行样式修改 , 为了 Vue 页面样式模块化 , 不对全局样式造成污染 , 我们往往都会加入 <code>scoped</code> 属性用来限制样式的作用域 , 然后这也会导致当我们修改部分 UI 组件样式失效. </p></div><p>为了避免这种问题 , 我们常用以下方式来解决</p><h4 id="1-深度作用选择器"><a href="#1-深度作用选择器" class="headerlink" title="1. 深度作用选择器"></a>1. 深度作用选择器</h4><p><code>&gt;&gt;&gt;</code></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">style</span> <span class="selector-tag">scoped</span>&gt;</span><br><span class="line"><span class="selector-class">.box</span> &gt;&gt;&gt; <span class="selector-class">.content</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>:<span class="number">20px</span>;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h4 id="2-deep-预处理器-less-下使用"><a href="#2-deep-预处理器-less-下使用" class="headerlink" title="2. /deep/ 预处理器 less 下使用"></a>2. /deep/ 预处理器 less 下使用</h4><p>深度选择器 <code>/deep/</code>  与 <code>&gt;&gt;&gt;</code> 作用相同</p><p>通过 <code>&gt;&gt;&gt;</code> 可以使得在使用 <code>scoped</code> 属性的情况下 , 穿透 scoped , 修改其他组件的值</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;style scoped lang="less"&gt;</span><br><span class="line"><span class="selector-class">.select</span> &#123;</span><br><span class="line">     /deep/ .ivu-card-body &#123;</span><br><span class="line">        <span class="selector-tag">width</span>: 100%;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><h4 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h4><p><a href="https://blog.csdn.net/qq_37548296/article/details/90716827" target="_blank" rel="noopener">CSDN:elementUI组件修改样式 覆盖无效</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;div class=&quot;note info&quot;&gt;&lt;p&gt;在使用ElementUI组件库开发时往往会需要对组件进行样式修改 , 为了 Vue 页面样式模块化 , 不对全局样式造成污染 , 我们往往都会加入 &lt;code&gt;scoped&lt;/code&gt; 属性用来限制样式的作用域 , 然后这也会
      
    
    </summary>
    
      <category term="Vue" scheme="https://lhalcyon.com/categories/Vue/"/>
    
    
      <category term="Vue" scheme="https://lhalcyon.com/tags/Vue/"/>
    
  </entry>
  
  <entry>
    <title>Docker常用命令</title>
    <link href="https://lhalcyon.com/docker-command/"/>
    <id>https://lhalcyon.com/docker-command/</id>
    <published>2020-04-01T16:00:00.000Z</published>
    <updated>2021-03-22T12:21:06.151Z</updated>
    
    <content type="html"><![CDATA[<div class="note info"><p>很多实用的 Docker 命令经常不记得 , 记录于此</p></div><p>列出所有容器ID</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker ps -aq</span><br></pre></td></tr></table></figure><p>停止所有容器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker stop $(docker ps -aq)</span><br></pre></td></tr></table></figure><p>删除所有容器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rm $(docker ps -aq)</span><br></pre></td></tr></table></figure><p>删除所有不使用的镜像</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker image prune --force --all</span><br></pre></td></tr></table></figure><p>删除所有停止的容器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker container prune -f</span><br></pre></td></tr></table></figure><p>清理资源命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker system prune</span><br></pre></td></tr></table></figure><p>删除 <code>exited</code> 状态容器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rm $(docker ps --all -q -f status=exited)</span><br></pre></td></tr></table></figure><p>有待继续补充</p><h4 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h4><p><a href="https://www.frank2019.me/articles/2019/10/30/1572404922106.html" target="_blank" rel="noopener">停止、删除所有的docker容器和镜像</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;div class=&quot;note info&quot;&gt;&lt;p&gt;很多实用的 Docker 命令经常不记得 , 记录于此&lt;/p&gt;&lt;/div&gt;
&lt;p&gt;列出所有容器ID&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;
      
    
    </summary>
    
      <category term="Docker" scheme="https://lhalcyon.com/categories/Docker/"/>
    
    
      <category term="Docker" scheme="https://lhalcyon.com/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>Element-UI Uploader上传达到数量后隐藏上传按钮</title>
    <link href="https://lhalcyon.com/element-ui-uploader-issue/"/>
    <id>https://lhalcyon.com/element-ui-uploader-issue/</id>
    <published>2020-03-09T16:00:00.000Z</published>
    <updated>2021-03-25T15:23:14.334Z</updated>
    
    <content type="html"><![CDATA[<div class="note info"><p>在项目中使用到了 Element UI 的 Uploader 组件 . 需求是达到上传文件上限后 , 将组件的添加图片按钮隐藏.</p></div><p><img src="https://lhalcyon-1258836598.cos.ap-shenzhen-fsi.myqcloud.com/blog/QQ20200401-120418.png" alt=""></p><p>首先给 <code>el-upload</code> 组件增加 class</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;el-upload</span><br><span class="line">            :<span class="class"><span class="keyword">class</span></span>=<span class="string">"&#123;hide:hideUpload&#125;"</span></span><br><span class="line">            :on-change=<span class="string">"handleImgChange"</span>&gt;</span><br></pre></td></tr></table></figure><p>然后 data 里面设定一个初始状态值</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hideUpload: false</span><br></pre></td></tr></table></figure><p>再在组件中绑定一个 <code>on-change</code> 事件 , <code>handleImgChange</code> </p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">handleImgChange(file, fileList) &#123;</span><br><span class="line">    <span class="keyword">this</span>.hideUpload = <span class="keyword">this</span>.vouchers.length &gt;= <span class="keyword">this</span>.limitCount;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>css 部分</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.hide</span> <span class="selector-class">.el-upload--picture-card</span> &#123;</span><br><span class="line"><span class="attribute">display</span>: none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样就可以实现上传按钮的显示隐藏了.</p><blockquote><p>注意 , Vue 中需要将 style 中的 scoped去掉方可生效 , 或者增加层级前缀</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/deep/ .hide .el-upload--picture-card &#123;</span><br><span class="line"><span class="selector-tag">display</span>: <span class="selector-tag">none</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h4><p><a href="https://blog.csdn.net/weixin_43851769/article/details/89991357" target="_blank" rel="noopener">CSDN:Element UI上传图片到达一定数量后隐藏图片上传按钮</a> </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;div class=&quot;note info&quot;&gt;&lt;p&gt;在项目中使用到了 Element UI 的 Uploader 组件 . 需求是达到上传文件上限后 , 将组件的添加图片按钮隐藏.&lt;/p&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;https://lhalcyon-125883659
      
    
    </summary>
    
      <category term="Vue" scheme="https://lhalcyon.com/categories/Vue/"/>
    
    
      <category term="ElementUI" scheme="https://lhalcyon.com/tags/ElementUI/"/>
    
  </entry>
  
  <entry>
    <title>MyBatis-Plus IndexOutOfBoundsException</title>
    <link href="https://lhalcyon.com/mybatis-plus-exception/"/>
    <id>https://lhalcyon.com/mybatis-plus-exception/</id>
    <published>2020-03-06T16:00:00.000Z</published>
    <updated>2021-03-22T12:21:06.151Z</updated>
    
    <content type="html"><![CDATA[<div class="note info"><p>最近在使用 MyBatis-Plus 时遇到了 <code>java.lang.IndexOutOfBoundsExceptin</code> .折腾许久 , 记录于此</p></div><p>初看以为真是数组越界错误 , 但是执行一个普通的 <code>select</code> 语句都会报错 . 最终搜索到了原因 , 主要是因为 <strong>lombok 使用不当!</strong></p><p>实体类用了 <code>@Builder</code> 注解 , 在使用该注解后 , 我们必须显示地声明构造方法 , 或者使用<code>@AllArgsConstructor</code> 或 <code>@NoArgsConstructor</code> 来声明构造 .</p><p>由于 MyBatis 找不到构造方法 , 无法将查询结果绑定到实体对象上 ,导致报错 .</p><h4 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h4><ul><li><a href="https://blog.csdn.net/qq_41829492/article/details/89392669" target="_blank" rel="noopener">mybatis-plus java.lang.IndexOutOfBoundsException: Index: 23, Size: 23</a></li><li><a href="https://github.com/mybatis/mybatis-3/issues/1567" target="_blank" rel="noopener">mybatis issue</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;div class=&quot;note info&quot;&gt;&lt;p&gt;最近在使用 MyBatis-Plus 时遇到了 &lt;code&gt;java.lang.IndexOutOfBoundsExceptin&lt;/code&gt; .折腾许久 , 记录于此&lt;/p&gt;&lt;/div&gt;
&lt;p&gt;初看以为真是数组越界错误 , 但
      
    
    </summary>
    
      <category term="Java" scheme="https://lhalcyon.com/categories/Java/"/>
    
    
      <category term="MyBatis-Plus" scheme="https://lhalcyon.com/tags/MyBatis-Plus/"/>
    
  </entry>
  
  <entry>
    <title>IDEA项目在maven projects中显示灰色的解决办法</title>
    <link href="https://lhalcyon.com/idea-maven-issue/"/>
    <id>https://lhalcyon.com/idea-maven-issue/</id>
    <published>2020-02-27T16:00:00.000Z</published>
    <updated>2021-03-25T15:23:14.334Z</updated>
    
    <content type="html"><![CDATA[<p>最近在 maven 项目将一个子 module 删除重新创建后 , 有依赖关系的 module 编译就会报错  , 表现则为 maven 模块变为灰色. </p><p><img src="https://lhalcyon-1258836598.cos.ap-shenzhen-fsi.myqcloud.com/blog/20180828231300131.png" alt=""></p><blockquote><p>以上图来自参考链接</p></blockquote><p>造成这个原因应该是删除 module 后 IDEA 忽略了该 maven 模块</p><p><strong>解决办法</strong></p><p>在 IDEA 中 maven 的 setting 中找到 ignored files , 看右边的面板中是否将变灰的maven模块忽略了.Settings–&gt;Maven–&gt;Ignored Files 去掉勾选</p><h4 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h4><ul><li><a href="https://blog.csdn.net/weixin_42884584/article/details/82156184" target="_blank" rel="noopener">CSDN:idea项目在maven projects中显示灰色的解决办法</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;最近在 maven 项目将一个子 module 删除重新创建后 , 有依赖关系的 module 编译就会报错  , 表现则为 maven 模块变为灰色. &lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://lhalcyon-1258836598.cos.ap-shenzhe
      
    
    </summary>
    
      <category term="IDEA" scheme="https://lhalcyon.com/categories/IDEA/"/>
    
    
      <category term="IDEA" scheme="https://lhalcyon.com/tags/IDEA/"/>
    
  </entry>
  
  <entry>
    <title>Mac设置Office语言</title>
    <link href="https://lhalcyon.com/office-mac-language/"/>
    <id>https://lhalcyon.com/office-mac-language/</id>
    <published>2020-02-24T16:00:00.000Z</published>
    <updated>2021-03-25T15:23:14.333Z</updated>
    
    <content type="html"><![CDATA[<div class="note info"><p>最近使用Office的时候发现了一个问题 , 由于电脑系统语言为英文 , Office 也会自动切换为英文 . 想单独设置 Office为中文版 , 搜索了一圈 , 发现网上的方法太多不可用或者要修改系统语言 , 最后找到了相关解决办法.</p></div><p>设置其实很简单 , 打开终端 , 输入命令</p><p><code>defaults write com.microsoft.Word AppleLanguages &#39;(&quot;zh-cn&quot;)&#39;</code></p><p>重启应用即可</p><h4 id="附加"><a href="#附加" class="headerlink" title="附加"></a>附加</h4><hr><p><strong>如果还有其他 Office 应用需要修改 ,修改命令包名即可</strong></p><p><code>defaults write com.microsoft.Excel AppleLanguages &#39;(&quot;zh-cn&quot;)&#39;</code></p><p><strong>修改成其他语言</strong></p><p>修改对应的语言代号即可 , 语言代码与国家地区对照表</p><p><img src="https://lhalcyon-1258836598.cos.ap-shenzhen-fsi.myqcloud.com/blog/lan1.png" alt=""></p><p><img src="https://lhalcyon-1258836598.cos.ap-shenzhen-fsi.myqcloud.com/blog/lan2.png" alt=""></p><h4 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h4><ul><li><p><a href="https://blog.csdn.net/student9128/article/details/80026645" target="_blank" rel="noopener">https://blog.csdn.net/student9128/article/details/80026645</a></p></li><li><p><a href="https://www.jianshu.com/p/96f930d2ffca" target="_blank" rel="noopener">https://www.jianshu.com/p/96f930d2ffca</a></p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;div class=&quot;note info&quot;&gt;&lt;p&gt;最近使用Office的时候发现了一个问题 , 由于电脑系统语言为英文 , Office 也会自动切换为英文 . 想单独设置 Office为中文版 , 搜索了一圈 , 发现网上的方法太多不可用或者要修改系统语言 , 最后找到了相关
      
    
    </summary>
    
      <category term="Mac" scheme="https://lhalcyon.com/categories/Mac/"/>
    
    
      <category term="Mac" scheme="https://lhalcyon.com/tags/Mac/"/>
    
  </entry>
  
  <entry>
    <title>Jenkins前后端项目参数化自动构建</title>
    <link href="https://lhalcyon.com/jenkins-parameterized-build/"/>
    <id>https://lhalcyon.com/jenkins-parameterized-build/</id>
    <published>2020-01-03T14:12:11.000Z</published>
    <updated>2021-03-25T15:23:14.333Z</updated>
    
    <content type="html"><![CDATA[<div class="note info"><p>最近进行了一次开发测试环境迁移 , 顺带连着之前的 Jenkins 也进行了迁移 , 因为对之前的搭建过程没有记录 , 导致这次的迁移过程中遇到了不少阻力 . 现记录主要流程于此 , 方便之后搭建 .</p></div><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>首先我们需要安装 Jenkins , 需要装卸方便 , 因此我们选择用 Docker 或 docker-compose 直接安装</p><p><strong>Docker</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --name devops-jenkins --user=root -p 8080:8080 -p 50000:50000 -v /mnt/data/jenkins/jenkins_home:/var/jenkins_home -d jenkins/jenkins:lts</span><br></pre></td></tr></table></figure><p><strong>docker-compose</strong></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">'3'</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line"><span class="attr">  jenkins:</span></span><br><span class="line"><span class="attr">    image:</span> <span class="string">jenkins/jenkins:lts</span></span><br><span class="line"><span class="attr">    container_name:</span> <span class="string">jenkins</span></span><br><span class="line"><span class="attr">    user:</span> <span class="string">root</span></span><br><span class="line"><span class="attr">    ports:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">"8080:8080"</span></span><br><span class="line"><span class="attr">    volumes:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">/etc/localtime:/etc/localtime:ro</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">$PWD/jenkins_home:/var/jenkins_home</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">/var/run/docker.sock:/var/run/docker.sock</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">/usr/bin/docker:/usr/bin/docker</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">/usr/lib64/libltdl.so.7:/usr/lib/x86_64-linux-gnu/libltdl.so.7</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">/mnt/data/docker:/data/docker</span></span><br><span class="line"><span class="attr">    environment:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">TZ=Asia/Shanghai</span></span><br></pre></td></tr></table></figure><p>启动后初始化及安装推荐插件</p><p><img src="https://lhalcyon-1258836598.cos.ap-shenzhen-fsi.myqcloud.com/blog/QQ20191227-102804.png" alt=""></p><p>可以通过容器日志查询初始密码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker logs xxx(容器ID)</span><br></pre></td></tr></table></figure><blockquote><p>可能部分插件超时安装失败 , 我们需要去网站上下载 <code>hpi</code> 插件文件 , 手动上传安装</p></blockquote><p>本文用到一些重要的插件列举如下:</p><blockquote><ul><li>Http Request    http请求插件</li><li>Publish Over SSH  文件上传部署插件</li><li>Docker   docker插件</li><li>Role-based Authorization Strategy  角色权限插件</li><li>Build-user-vars-plugin  构建角色变量插件</li><li>Beary Chat     协作工具通知插件(视实际情况进行替换)</li><li>…</li></ul></blockquote><h4 id="系统配置"><a href="#系统配置" class="headerlink" title="系统配置"></a>系统配置</h4><p>点击系统管理 -&gt; Global Tool Configuration 找到 JDK 点击新增按钮进行安装 , 此处需要 Oracle 账号请自行注册</p><p>然后找到 Maven 点击新增按钮 , 此处我们使用 <code>3.2.5</code>  视具体情况进行替换 , 笔者是因为选择其他版本编译项目会报错 .</p><p>点击系统管理 -&gt; 系统设置 配置 SSH (前端nginx服务器)</p><h4 id="权限分配"><a href="#权限分配" class="headerlink" title="权限分配"></a>权限分配</h4><p>选择系统管理 -&gt; Configuration Global Security 启用安全： TCP port for JNLP agents -&gt;禁用，访问控制-安全域-&gt;jenkins专有用户数据库 , 访问控制-授权策略-&gt;Role-Based Strategy 如：</p><p><img src="https://user-gold-cdn.xitu.io/2018/8/8/16519d62527f811b?imageslim" alt="img"></p><p>选择系统管理 Manage and Assign Roles -&gt; Manage Roles</p><p>此处针对项目配置权限 , 以项目名正则匹配 . 这里提供几个例子</p><blockquote><p><code>^((?!other).)*$</code>  项目名中不带 <code>other</code> 的均符合</p><p><code>[\w\W]*frontend[\w\W]</code> 项目名中间有 <code>frontend</code> 的均符合</p><p><code>[\w\W]*</code> 任意项目名均符合</p></blockquote><h3 id="前端"><a href="#前端" class="headerlink" title="前端"></a>前端</h3><h4 id="场景说明"><a href="#场景说明" class="headerlink" title="场景说明"></a>场景说明</h4><p>这里针对 前端 Vue 项目进行构建 . 前端开发人员会本地进行打包 , 得到一个 <code>dist.zip</code>  压缩包 , 此时需要上传到 nginx 服务器上 , 自动解压 . 当然有更好的做法 , 直接在服务器上拉取代码 , 编译 , 部署  , 此处我们只讲解打包后通过 Jenkins 上传的流程 .</p><p><img src="https://lhalcyon-1258836598.cos.ap-shenzhen-fsi.myqcloud.com/blog/QQ20191227-104621.png" alt=""></p><p><img src="https://lhalcyon-1258836598.cos.ap-shenzhen-fsi.myqcloud.com/blog/QQ20191227-104621.png" alt=""></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 视具体情况进行替换</span></span><br><span class="line">cd /mnt/data/frontend/$MODULE</span><br><span class="line">sudo rm -rf latest.zip</span><br><span class="line">sudo rm -rf dist</span><br><span class="line">unzip pack.zip</span><br><span class="line">mv pack.zip latest.zip</span><br></pre></td></tr></table></figure><h3 id="后端"><a href="#后端" class="headerlink" title="后端"></a>后端</h3><p>后端是使用 Java Spring Cloud 项目. 开发者在 Jenkins 指定对应环境、参数然后就会开始构建 , 过程大致为</p><blockquote><p>选择参数构建 -&gt; Jenkins 从 Git 上拉取代码 -&gt; Maven构建 -&gt; Docker构建镜像 -&gt; 推送到私有镜像仓库 -&gt; 通知 Rancher 集群更新服务 -&gt; 通知协作工具 / 邮件通知</p></blockquote><p>首先确定构建参数</p><p><img src="https://lhalcyon-1258836598.cos.ap-shenzhen-fsi.myqcloud.com/blog/QQ20191227-105021.png" alt=""></p><p>Execute Shell</p><p><img src="https://lhalcyon-1258836598.cos.ap-shenzhen-fsi.myqcloud.com/blog/QQ20191227-105217.png" alt=""></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">docker login --username=仓库USERNAME --password=仓库PASSWORD $DOCKER_REGISTRY</span><br><span class="line">cp $WORKSPACE/$MODULE_NAME/target/*.jar $WORKSPACE/$MODULE_NAME/app.jar</span><br><span class="line">cd $WORKSPACE/$MODULE_NAME</span><br><span class="line">docker build -f Dockerfile-$ENV -t $DOCKER_REGISTRY/$DOCKER_NAMESPACE/$MODULE_NAME:latest .</span><br><span class="line">docker build -f Dockerfile-$ENV -t $DOCKER_REGISTRY/$DOCKER_NAMESPACE/$MODULE_NAME:$DOCKER_TAG .</span><br><span class="line">docker push $DOCKER_REGISTRY/$DOCKER_NAMESPACE/$MODULE_NAME:latest</span><br><span class="line">docker push $DOCKER_REGISTRY/$DOCKER_NAMESPACE/$MODULE_NAME:$DOCKER_TAG</span><br><span class="line"></span><br><span class="line">docker rmi $DOCKER_REGISTRY/$DOCKER_NAMESPACE/$MODULE_NAME:latest</span><br><span class="line"></span><br><span class="line">if [ $&#123;DOCKER_TAG&#125; != "latest" ]; then</span><br><span class="line">    docker rmi $DOCKER_REGISTRY/$DOCKER_NAMESPACE/$MODULE_NAME:$DOCKER_TAG</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><p>然后再通过构建后操作使用 <code>Http Request</code> 插件调用接口升级 Rancher 服务 , 具体参考 <code>Rancher通过API升级服务</code> 文章 . </p><blockquote><p>在实际应用中发现 , 此方法升级会覆盖之前的服务主机调度 , 因此对于多机器集群 , 不大适用</p></blockquote><h3 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h3><p><a href="https://juejin.im/post/5b6af759e51d451951138eb4" target="_blank" rel="noopener">jenkins+docker持续集成</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;div class=&quot;note info&quot;&gt;&lt;p&gt;最近进行了一次开发测试环境迁移 , 顺带连着之前的 Jenkins 也进行了迁移 , 因为对之前的搭建过程没有记录 , 导致这次的迁移过程中遇到了不少阻力 . 现记录主要流程于此 , 方便之后搭建 .&lt;/p&gt;&lt;/div&gt;
&lt;h3
      
    
    </summary>
    
      <category term="Jenkins" scheme="https://lhalcyon.com/categories/Jenkins/"/>
    
    
      <category term="Jenkins" scheme="https://lhalcyon.com/tags/Jenkins/"/>
    
  </entry>
  
</feed>
